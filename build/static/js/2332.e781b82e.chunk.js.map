{"version":3,"file":"static/js/2332.e781b82e.chunk.js","mappings":"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","sources":["components/global/icons/arrow_left.js","functions/newTabMethod.js","functions/tagColorAndReadTimeMethod.js","pages/News/components/author-date-readTime/index.js","pages/News/components/carousalTop/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import React from 'react'\n\n const ArrowLeft = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" className={props.className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n</svg>\n}\nexport default ArrowLeft\n","import { logEventWithParams } from \"./commonMethod\";\n\n\nexport const newTab=(url,title,analyticsDesc)=>{\n    window.open(\n       url, \"_blank\");\n       logEventWithParams(analyticsDesc, { Title: title })\n}","export const getColorByIndex=(index)=>{\n\n    let color = \"yellow\";\n    if (index % 3 === 0) {\n        color = 'red'\n    } else if (index % 2 === 0) {\n        color = 'skyblue'\n    }\n    return color;\n}\n\nexport  const getReadTime = (text) => {\n    const wordsPerMinute = 120;\n    const textLength = text?.split(\" \").length;\n    let minutesToRead = Math.ceil(textLength / wordsPerMinute);\n    return minutesToRead;\n\n}\n\nexport const getColorById =(id)=>{\n    let color='yellow'\n    if(id===0){\n        color = 'red'\n    }\n   else if (id % 2 === 0) {\n       \n        color='yellow'\n    } else if(id%2===1) {\n        color = 'skyblue'\n    }\n    return color;\n}","import React,{useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport './_authorDateReadDate.scss'\nconst AuthorDateRead = ({author,authorColor,link,date,readTime,color,fontSize}) => {\n\n  \n    const [isType1True,setIsType1True]=useState(false);\n    const [isType2True,setIsType2True]=useState(false);\n    const [isType3True,setIsType3True]=useState(false);\n\n\n    useEffect(() => {\n\n        const check=()=>{\n            if(typeof author==='string' && typeof date==='string' && typeof readTime==='string'){\n                setIsType1True(!isType1True)\n            }\n            else if(typeof date==='string' && typeof readTime==='string'){\n                setIsType2True(!isType2True)\n            }\n            else if(typeof date==='string'){\n                setIsType3True(!isType3True)\n            }\n            else{\n                console.log('no match');\n            }\n\n           \n        }\n        check();\n       \n    }, [])\n\n    return (\n        <>\n         { isType1True?\n\n            <div className='authorDateReadDate-wrapper' style={{fontSize:`${fontSize}`}}>\n                <div className='authorDateReadDate-wrapper-author'>\n                    <span className='authorDateReadDate-wrapper-author-firstSpan' style={{fontSize:`${fontSize}`,color:`${color}`}}>\n                        By:<Link to={link} style={{fontSize:`${fontSize}`,color:`${authorColor}`}}>{author}</Link>\n                    </span>\n                </div>\n                <div className='authorDateReadDate-wrapper-dot' style={{color:`${color}`,border:`1px solid ${color}`}}></div>\n                <div className='authorDateReadDate-wrapper-date' style={{color:`${color}`}}>{date}</div>\n                <div className='authorDateReadDate-wrapper-dot' style={{color:`${color}`,border:`1px solid ${color}`}} ></div>\n                <div className='authorDateReadDate-wrapper-readTime' style={{color:`${color}`}}>{readTime}</div>\n\n            </div>\n           :\n           \"\"\n        }\n\n        {\n            isType2True?\n\n            <div className='authorDateReadDate-wrapper'>\n                <div className='authorDateReadDate-wrapper-date' style={{color:`${color}`,fontSize:`${fontSize}`}}>{date}</div>\n                <div className='authorDateReadDate-wrapper-dot' style={{color:`${color}`,border:`1px solid ${color}`}}></div>\n                <div className='authorDateReadDate-wrapper-readTime' style={{color:`${color}`,fontSize:`${fontSize}`}}>{readTime}</div>\n            </div>\n            :\n            \"\"\n        }\n\n        { isType3True?\n\n            <div className='authorDateReadDate-wrapper'>\n                <div className='authorDateReadDate-wrapper-date' style={{color:`${color}`,fontSize:`${fontSize}`}}>{date}</div>\n            </div>\n            :\n            \"\"\n        }\n            \n\n            \n        </>\n    )\n}\n\nexport default React.memo(AuthorDateRead)\n","import React, { useState } from 'react'\nimport './_carousalTop.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport SwiperCore, { Autoplay, Controller, Pagination } from 'swiper';\n\nimport AuthorDateRead from '../author-date-readTime';\n// import { logEventWithParams } from '../../../../functions/commonMethod';\nimport shortid from  \"shortid\";\nimport { getReadTime } from '../../../../functions/tagColorAndReadTimeMethod';\nimport { newTab } from '../../../../functions/newTabMethod';\nimport ArrowLeft from '../../../../components/global/icons/arrow_left';\nimport ArrowRight from '../../../../components/global/icons/arrow_right';\nSwiperCore.use([Autoplay]);\nSwiperCore.use([Controller]);\nSwiperCore.use([Pagination]);\n\nconst CarousalTop = ({ details }) => {\n\n    const [count, setCount] = useState(0);\n    // const [controlledSwiper, setControlledSwiper] = useState(null);\n\n    return (\n        <div style={{ position: 'relative' }}>\n            <Swiper\n                loop={true}\n                speed={800}\n                // activeSlideKey=\"2\"\n                slidesPerView={1}\n                centeredSlides={true}\n                // autoplay={{\n                //     \"delay\": 4000,\n                //     \"disableOnInteraction\": false\n                // }}\n                navigation={{\n                    nextEl: '.swiper-button-nextCT',\n                    prevEl: '.swiper-button-prevCT',\n                }}\n\n                onSlideChange={({ realIndex }) => {\n                    setCount(realIndex);\n                }}\n                className=\"carousalTop-sliderContainer\"\n        \n            >\n                {details?.filter((data, index) => index < 3).map((data, index) => {\n\n                   \n                    return <SwiperSlide key={shortid.generate()} >\n                        <div className='carousalTop-wrapper' style={{ backgroundImage: `url(${data['media:content'].$?.url})` }}>\n                            <div className='carousalTop-wrapper-description'>\n\n                                <h3 className='carousalTop-wrapper-description-title' onClick={() => newTab(data?.link,data?.title,'web_news_detail_page_opened')}>{data?.title}</h3>\n                                <AuthorDateRead date={new Date(data?.pubDate).toDateString()} readTime={getReadTime(data?.content) + \" min read\"} color='#fff' fontSize='12px' />\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                }\n                )}\n\n                <div className=\"swiper-button-prevCT\"><ArrowLeft className=\"arrow-pointed\"/></div>\n                <div className=\"swiper-button-nextCT\"> <ArrowRight className=\"arrow-pointed\"/></div>\n            </Swiper>\n\n\n            <div className='carousalTop-wrapper-Bottom '>\n                {details?.filter((data, index) => index < 3).map((data, index) => (\n                    <div key={shortid.generate()} className={`carousalTop-wrapper-Bottom-wrapper carousalTop-wrapper-Bottom-wrapper${index} carousalTop-wrapper-Bottom-wrapper carousalTop-wrapper-Bottom-wrapper${count === index ? \"-active\" : \"\"}`}>\n                        <div className={`carousalTop-wrapper-Bottom-wrapper-Description ${(index === count) ? 'carousalTop-wrapper-Bottom-wrapper-DescriptionActive' : ''}`} >\n                            <div className='carousalTop-wrapper-Bottom-wrapper-Description-wrapper'>\n                                <div className='carousalTop-wrapper-Bottom-wrapper-Description-wrapper-number' >{index}</div>\n                                <h4 className='carousalTop-wrapper-Bottom-wrapper-Description-wrapper-heading' onClick={() => newTab(data?.link,data?.title,'web_news_detail_page_opened')}>{data?.title}</h4>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\nexport default React.memo(CarousalTop)\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["props","_jsx","xmlns","className","fill","viewBox","stroke","children","strokeLinecap","strokeLinejoin","strokeWidth","d","newTab","url","title","analyticsDesc","window","open","logEventWithParams","Title","getColorByIndex","index","color","getReadTime","text","textLength","split","length","Math","ceil","AuthorDateRead","_ref","author","authorColor","link","date","readTime","fontSize","_useState","useState","_useState2","_slicedToArray","isType1True","setIsType1True","_useState3","_useState4","isType2True","setIsType2True","_useState5","_useState6","isType3True","setIsType3True","useEffect","console","log","_jsxs","_Fragment","style","concat","Link","to","border","React","SwiperCore","Autoplay","Controller","Pagination","CarousalTop","details","count","setCount","position","Swiper","loop","speed","slidesPerView","centeredSlides","navigation","nextEl","prevEl","onSlideChange","_ref2","realIndex","filter","data","map","_data$mediaContent$$","SwiperSlide","backgroundImage","$","onClick","Date","pubDate","toDateString","content","shortid","ArrowLeft","ArrowRight","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","floor","push","splice","shuffle","get","characters","seed","lookup","counter","previousSeconds","generate","clusterWorkerId","str","seconds","now","random","format","number","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","id","RegExp","replace","test","randomByte","crypto","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","LN2","step"],"sourceRoot":""}