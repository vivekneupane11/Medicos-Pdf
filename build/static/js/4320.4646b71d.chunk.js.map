{"version":3,"file":"static/js/4320.4646b71d.chunk.js","mappings":"gSAQAA,EAAAA,EAAAA,IAAe,CAACC,EAAAA,IAChBD,EAAAA,EAAAA,IAAe,CAACE,EAAAA,IAChBF,EAAAA,EAAAA,IAAe,CAACG,EAAAA,IAGhB,IAwEA,EAxEuB,SAAHC,GAA+B,IAAzBC,EAAKD,EAALC,MAAOC,EAAUF,EAAVE,WAE7BC,GAAkCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAsCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9BE,GAAFD,EAAA,GAAgBA,EAAA,IAC5BE,EAAc,SAACC,EAAMC,GACvBN,EAAaM,GACbZ,EAAWW,IAmBf,OAfAE,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAoB,WACtBL,EAAeM,OAAOC,aAK1B,OAFAD,OAAOE,iBAAiB,SAAUH,GAE3B,WACHC,OAAOG,oBAAoB,SAAUJ,MAG1C,KAICK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAS,sBAAAE,OAAwBjB,GAAYgB,SAE7CtB,EAAMwB,KAAI,SAACZ,EAAMC,GAAK,OAEnBO,EAAAA,EAAAA,KAAA,OAAiBC,UAAU,2BAA0BC,SAChDT,IAAUP,GACPc,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uCAAuCI,QAAS,kBAAMd,EAAYC,EAAMC,IAAOS,UAE1FF,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACLL,UAAU,UACVM,KAAK,WACLC,KAAMhB,EAAKiB,IAEXC,QAASlB,EAAKmB,SACdC,QAAQ,GAFHpB,EAAKqB,OAQlBb,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAiCI,QAAS,kBAAMd,EAAYC,EAAMC,IAAOS,UACpFF,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACLL,UAAU,UACVM,KAAK,WACLC,KAAMhB,EAAKiB,IAEXC,QAASlB,EAAKmB,SACdC,QAAQ,GAFHpB,EAAKqB,OArBhBpB","sources":["pages/Book/components/exploreLinkTab/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport SwiperCore, { Autoplay, Controller, Pagination } from 'swiper';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/swiper.scss';\nimport { Headings } from '../../../../components/global/headings';\nimport './_exploreLinkTab.scss';\nSwiperCore.use([Autoplay]);\nSwiperCore.use([Controller]);\nSwiperCore.use([Pagination]);\n\n\nconst ExploreLinkTab = ({ links, activeData }) => {\n\n    const [activeTab, setActiveTab] = useState(0);\n    const [screenWidth, setScreenWidth] = useState('');\n    const handleClick = (link, index) => {\n        setActiveTab(index)\n        activeData(link)\n\n    }\n\n    useEffect(() => {\n\n        const CurrentScreenSize = () => {\n            setScreenWidth(window.innerWidth);\n        }\n\n        window.addEventListener('resize', CurrentScreenSize)\n\n        return () => {\n            window.removeEventListener('resize', CurrentScreenSize)\n        }\n\n    }, [])\n\n\n    return (\n        <nav className=\"exploreLink\">\n\n            <div className={`exploreLinkTab move${activeTab}`}>\n\n                {links.map((link, index) => (\n\n                    <div key={index} className=\"exploreLinkTab-container\">\n                        {index === activeTab ?\n                            <div className=\"exploreLinkTab-container-link-active\" onClick={() => handleClick(link, index)}>\n\n                                <Headings\n                                    className=\"tabText\"\n                                    type=\"heading6\"\n                                    href={link.url}\n                                    key={link.id}\n                                    content={link.linkName}\n                                    active={true}\n                                />\n\n\n                            </div>\n                            :\n                            <div className=\"exploreLinkTab-container-link \" onClick={() => handleClick(link, index)}>\n                                <Headings\n                                    className=\"tabText\"\n                                    type=\"heading6\"\n                                    href={link.url}\n                                    key={link.id}\n                                    content={link.linkName}\n                                    active={false}\n\n                                />\n\n\n                            </div>\n                        }\n\n                    </div>\n\n                ))}\n\n            </div>\n\n        </nav>\n    )\n}\nexport default ExploreLinkTab\n"],"names":["SwiperCore","Autoplay","Controller","Pagination","_ref","links","activeData","_useState","useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","setScreenWidth","handleClick","link","index","useEffect","CurrentScreenSize","window","innerWidth","addEventListener","removeEventListener","_jsx","className","children","concat","map","onClick","Headings","type","href","url","content","linkName","active","id"],"sourceRoot":""}