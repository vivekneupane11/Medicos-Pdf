{"version":3,"file":"static/js/1546.251979f5.chunk.js","mappings":"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","sources":["components/global/SEO/index.js","components/global/icons/delete.js","components/global/icons/dots_Verticle.js","components/global/icons/edit.js","components/global/images/index.js","functions/commonMethod.js","functions/filterSlideSubCategory.js","pages/Slide/component/slideCardPlaceholder/index.js","pages/UploadedSlide/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {Helmet} from \"react-helmet\";\nimport { useLocation } from 'react-router';\nconst SEO = ({title, description,keywords,image}) => {\n\n    const location=useLocation()\n    const [url,setUrl]=useState(location?.pathname)\n    \n    return (\n        <Helmet>\n            <meta name=\"title\" content={title}/>\n            <meta name=\"description\" content={description} data-react-helmet=\"true\" />\n\n            {/* <!-- Open Graph / Facebook --> */}\n            <meta property=\"og:type\" content=\"website\"/>\n            <meta property=\"og:url\" content={url}/>\n            <meta property=\"og:title\" content={title}/>\n            <meta property=\"og:description\" content={description}/>\n            <meta property=\"og:image\" content={image}/>\n\n            {/* <!-- Twitter --> */}\n            <meta property=\"twitter:card\" content={title}/>\n            <meta property=\"twitter:url\" content={url}/>\n            <meta property=\"twitter:title\" content={title}/>\n            <meta property=\"twitter:description\" content={description}/>\n            <meta property=\"twitter:image\" content={image}></meta>\n            <title>{title}</title>\n            \n        </Helmet>\n    )\n}\n\nexport default SEO\n","import React from 'react'\n\nconst Delete = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" className={props.className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n</svg>\n}\n\nexport default Delete","import React from 'react'\n\nconst VerticleDots = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" className={props.className} viewBox=\"0 0 20 20\" fill=\"currentColor\">\n  <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" />\n</svg>\n}\n\nexport default VerticleDots","import React from 'react'\n\nconst EditIcon = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" className={props.className} viewBox=\"0 0 20 20\" fill=\"currentColor\">\n  <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n  <path fillRule=\"evenodd\" d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\" clipRule=\"evenodd\" />\n</svg>\n}\n\nexport default EditIcon","import React from 'react'\nimport { DisplayTitle } from '../Titles'\nimport './_images.scss'\n\nexport const Images = ({ Image, type, height, width }) => {\n    return (\n        <div>\n            <img className={`image ${type ? type : \"\"}`} src={Image} style={{ width, height }} alt='image'></img>\n        </div>\n    )\n}\nexport const Avatar = ({ Image, size, text }) => {\n    size = size || \"50px\"\n    return (\n\n        <div className=\"image-wrapper\" style={{ width: size, height: size }}>\n            {\n                Image ?\n                    <img className=\"avatar\" src={Image} style={{ width: size, height: size }} alt='image'></img>\n                    :\n                    <div className=\"avatar-text\" style={{ width: size, height: size }}>\n                        <DisplayTitle title={text?.substring(0, 1)} color='white' type=\"display4\" />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport const AvatarPlaceholder=({size})=>{\n    size = size || \"50px\"\n    return(\n        <div className=\"image-wrapper-placeholder\" style={{ width: size, height: size }}>\n      \n                {/* <img className=\"avatarPlaceholder\" style={{ width: size, height: size }} alt='image'></img> */}\n                \n        \n    </div>\n    )\n\n    \n}\n","import {getAnalytics, logEvent} from 'firebase/analytics';\nexport const logEventWithoutParams = (eventName = \"some_event_name\") => {\n    try {\n        logEvent(getAnalytics(),eventName)\n    } catch (error) {\n        console.log(`EVENT WITHOUT PARAMS ERROR LOGGED: ${eventName}, ${error}`)\n\n    }\n\n}\n\nexport const logEventWithParams = (eventName = \"some_event_name\", params = {}) => {\n    try {\n        logEvent(getAnalytics(),eventName, params)\n    } catch (error) {\n        console.log(`EVENT WITHOUT PARAMS ERROR LOGGED: ${eventName}, ${error} ,${params}`)\n    }\n}\n\n","\nexport default function filterSlideSubcategory(subCategory) {\n    function capitalize(mySentence) {\n        const words = mySentence.split(\" \");\n\n        for (let i = 0; i < words.length; i++) {\n            words[i] = words[i][0]?.toUpperCase() + words[i]?.substr(1);\n        }\n\n        return words.join(\" \");\n    }\n    if (subCategory) {\n        let capitalizedWords = capitalize(subCategory)\n        // console.log('capitalize', capitalizedWords, subCategory)\n        let capatalizefinal =   capitalizedWords.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]\\s|[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]|\\s/g, '');\n        capatalizefinal = capatalizefinal == 'Gynoobs'? 'GynoObs' : capatalizefinal;\n        return capatalizefinal;\n\n    } else {\n        return null\n    }\n}","import React from 'react'\nimport './_slidecardPlaceholder.scss'\n\nimport { AvatarPlaceholder } from '../../../../components/global/images'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nexport const SlideCardPlaceholder = () => {\n    return (\n       <>\n           <TransitionGroup>\n           <div className='slidecardPlaceholder-wrapper'>\n           <CSSTransition \n            classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}\n           >\n\n           <h1 className='slidecardPlaceholder-wrapper-image-container'>\n            </h1>\n\n           </CSSTransition>\n           \n           <CSSTransition \n            classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}\n           >\n            <h1 className='slidecardPlaceholder-wrapper-heading-container'>\n            \n            </h1>\n\n            </CSSTransition>\n\n            <CSSTransition\n            classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}>\n            <h1 className='slidecardPlaceholder-wrapper-subheading-container'>\n            </h1>\n            </CSSTransition>\n\n            <div className='slidecardPlaceholder-wrapper-bottom-container'>\n                <div className='slidecardPlaceholder-wrapper-bottom-container-profile'>\n               \n                    <div className='slidecardPlaceholder-wrapper-bottom-container-profile-image'>\n                    <CSSTransition\n            classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}>\n                        <AvatarPlaceholder size={40}/>\n                        </CSSTransition>\n\n                    </div>\n                    \n                    <CSSTransition\n            classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}>\n                    <div className='slidecardPlaceholder-wrapper-bottom-container-profile-username'>\n                    </div>\n                    </CSSTransition>\n\n\n\n                </div>\n\n\n            </div>\n            \n        </div>\n           </TransitionGroup>\n       </>\n    )\n}\n","import React from 'react'\nimport { useLocation } from 'react-router';\nimport SEO from '../../components/global/SEO';\nimport { DisplayTitle } from '../../components/global/Titles';\n// import Loading from '../../components/loading';\nimport SlideCard from '../SlideDetail/components/slideCard';\nimport img from '../../assets/images/bookbackg.webp'\nimport './_uploadedSlidePage.scss'\nimport { SlideCardPlaceholder } from '../Slide/component/slideCardPlaceholder';\n\nconst UploadedSlide = () => {\n    const location = useLocation();\n    const {uploadData} = location.state;\n    let  uploadedSlides = JSON.parse(uploadData);\n \n\n    return (\n        <div className=\"slideUploaded-result-page-container\">\n\n            <SEO image={img} title='MedicosPDF uploadedSlide Page' description='All the search results are shown in this page that includes uploaded slides' />\n            <div className=\"slideUploaded-result-page-book-section\">\n               \n                <div className=\"slideUploaded-result-page-book-section-head\">\n                    <DisplayTitle title=\"Uploaded Slides\" type=\"display3\" />\n                </div>\n                {\n                    uploadedSlides?.length ?\n\n                        <div className=\"slideUploaded-result-page-book-section-grid\">\n                            {uploadedSlides.map((slide, index) => (\n                                <div key={slide?.SlideName} className=\"item\" >\n                                    <SlideCard\n                                        title={slide.slideCategory}\n                                        description={slide.SlideName}\n                                        images={slide.slideImages}\n                                        datas={slide}\n                                    />\n                                   \n                                </div>\n                            ))}\n                        </div>\n                        :\n                        <div>\n                            {\n                                uploadedSlides?\n                                    <div className=\"slideUploaded-search-loading\">\n                                       <SlideCardPlaceholder/>\n                                    </div>\n                                    :\n                                    <h3 className='slideUploaded-dataNotFound-head'>(◕︵◕) Sorry,Data not found</h3>\n                            }\n                        </div>\n                }\n            </div>\n            <div className=\"slideUploaded-result-page-slide-section\">\n\n            </div>\n        </div>\n    )\n}\nexport default UploadedSlide\n"],"names":["_ref","title","description","image","keywords","location","useLocation","_useState","useState","pathname","_useState2","_slicedToArray","url","_jsxs","Helmet","children","_jsx","name","content","property","props","xmlns","className","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","Images","Image","type","height","width","concat","src","style","alt","Avatar","_ref2","size","text","DisplayTitle","substring","color","AvatarPlaceholder","_ref3","logEventWithoutParams","eventName","arguments","length","undefined","logEvent","getAnalytics","error","console","log","logEventWithParams","params","filterSlideSubcategory","subCategory","capatalizefinal","mySentence","words","split","i","_words$i$","_words$i","toUpperCase","substr","join","capitalize","replace","SlideCardPlaceholder","_Fragment","TransitionGroup","CSSTransition","classNames","in","appear","timeout","uploadData","state","uploadedSlides","JSON","parse","SEO","img","map","slide","index","SlideCard","slideCategory","SlideName","images","slideImages","datas"],"sourceRoot":""}