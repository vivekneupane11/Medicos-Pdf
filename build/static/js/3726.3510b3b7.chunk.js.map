{"version":3,"file":"static/js/3726.3510b3b7.chunk.js","mappings":"uKAAA,IAAMA,EAAiB,CACnB,CACIC,IAAK,WACLC,GAAI,EACJC,SAAU,gBACVC,UAAW,2FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,WAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,sBAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,WAEd,CACID,GAAI,EACJC,SAAU,aAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,aAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,gBAKtB,CACIF,IAAK,UACLC,GAAI,EACJC,SAAU,mBACVC,UAAW,2FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,sBAEd,CACID,GAAI,EACJC,SAAU,aAEd,CACID,GAAI,EACJC,SAAU,OAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,oBAEd,CACID,GAAI,EACJC,SAAU,oBAEd,CACID,GAAI,EACJC,SAAU,WAEd,CACID,GAAI,GACJC,SAAU,WAEd,CACID,GAAI,GACJC,SAAU,qBAEd,CACID,GAAI,GACJC,SAAU,cAEd,CACID,GAAI,GACJC,SAAU,aAEd,CACID,GAAI,GACJC,SAAU,gBAEd,CACID,GAAI,GACJC,SAAU,eAEd,CACID,GAAI,GACJC,SAAU,kBAEd,CACID,GAAI,GACJC,SAAU,aAEd,CACID,GAAI,GACJC,SAAU,cAEd,CACID,GAAI,GACJC,SAAU,aAEd,CACID,GAAI,GACJC,SAAU,gBAEd,CACID,GAAI,GACJC,SAAU,aAMtB,CACIF,IAAK,QACLC,GAAI,EACJC,SAAU,SACVC,UAAW,0FACXC,cAAe,CAEX,CACIH,GAAI,EACJC,SAAU,oBAEd,CACID,GAAI,EACJC,SAAU,sBAEd,CACID,GAAI,EACJC,SAAU,mCAEd,CACID,GAAI,EACJC,SAAU,2BAEd,CACID,GAAI,EACJC,SAAU,kBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,mBAEd,CACID,GAAI,EACJC,SAAU,kBAEd,CACID,GAAI,EACJC,SAAU,2BAEd,CACID,GAAI,EACJC,SAAU,0BAEd,CACID,GAAI,GACJC,SAAU,kBAKtB,CACIF,IAAK,QACLC,GAAI,EACJC,SAAU,UACVC,UAAW,0FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,wBAEd,CACID,GAAI,EACJC,SAAU,4CAEd,CACID,GAAI,EACJC,SAAU,4BAEd,CACID,GAAI,EACJC,SAAU,uBAEd,CACID,GAAI,EACJC,SAAU,0BAEd,CACID,GAAI,EACJC,SAAU,0BAEd,CACID,GAAI,EACJC,SAAU,gDAEd,CACID,GAAI,EACJC,SAAU,4BAEd,CACID,GAAI,EACJC,SAAU,qCAEd,CACID,GAAI,EACJC,SAAU,wBAEd,CACID,GAAI,GACJC,SAAU,aAEd,CACID,GAAI,GACJC,SAAU,0BAEd,CACID,GAAI,GACJC,SAAU,uBAEd,CACID,GAAI,GACJC,SAAU,eAItB,CACID,GAAI,EACJC,SAAU,MACVC,UAAW,2FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,YAEd,CACID,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,8BAItB,CACIF,IAAK,OACLC,GAAI,EACJC,SAAU,WACVC,UAAW,2FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,SAEd,CACID,GAAI,EACJC,SAAU,QAEd,CACID,GAAI,EACJC,SAAU,iBAEd,CACID,GAAI,EACJC,SAAU,eAKpBG,EAAkB,CACpB,CACIL,IAAK,WACLC,GAAI,EACJC,SAAU,gBACVC,UAAW,2FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,WAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,aAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,aAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,gBAMtB,CACIF,IAAK,UACLC,GAAI,EACJC,SAAU,mBACVC,UAAW,2FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,cAEd,CACID,GAAI,EACJC,SAAU,UAEd,CACID,GAAI,EACJC,SAAU,aAEd,CACID,GAAI,EACJC,SAAU,OAEd,CACID,GAAI,EACJC,SAAU,oBAEd,CACID,GAAI,EACJC,SAAU,YAEd,CACID,GAAI,EACJC,SAAU,qBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,eAEd,CACID,GAAI,EACJC,SAAU,aAEd,CACID,GAAI,GACJC,SAAU,cAEd,CACID,GAAI,GACJC,SAAU,aAEd,CACID,GAAI,GACJC,SAAU,aAKtB,CACIF,IAAK,QACLC,GAAI,EACJC,SAAU,SACVC,UAAW,0FACXC,cAAe,CAEX,CACIH,GAAI,EACJC,SAAU,0BAEd,CACID,GAAI,EACJC,SAAU,oBAEd,CACID,GAAI,EACJC,SAAU,sBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,kCAEd,CACID,GAAI,EACJC,SAAU,6BAEd,CACID,GAAI,EACJC,SAAU,kBAEd,CACID,GAAI,EACJC,SAAU,gBAEd,CACID,GAAI,EACJC,SAAU,sCAEd,CACID,GAAI,EACJC,SAAU,kBAEd,CACID,GAAI,GACJC,SAAU,kBAEd,CACID,GAAI,GACJC,SAAU,2BAEd,CACID,GAAI,GACJC,SAAU,wBAKtB,CACIF,IAAK,QACLC,GAAI,EACJC,SAAU,UACVC,UAAW,0FACXC,cAAe,CACX,CACIH,GAAI,EACJC,SAAU,wBAEd,CACID,GAAI,EACJC,SAAU,0BAEd,CACID,GAAI,EACJC,SAAU,4BAEd,CACID,GAAI,EACJC,SAAU,oBAEd,CACID,GAAI,EACJC,SAAU,0BAEd,CACID,GAAI,EACJC,SAAU,+BAEd,CACID,GAAI,EACJC,SAAU,4BAEd,CACID,GAAI,EACJC,SAAU,qCAEd,CACID,GAAI,EACJC,SAAU,0BAEd,CACID,GAAI,EACJC,SAAU,sCAEd,CACID,GAAI,GACJC,SAAU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","sources":["constants/Book/BookCategories.js","functions/firebaseMethod.js"],"sourcesContent":["const bookCategories = [\n    {\n        key: 'Jacksoxn',\n        id: 0,\n        category: \"Basic Science\",\n        publisher: 'We have more than 5000 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"Anatomy\"\n            },\n            {\n                id: 1,\n                category: 'Biochemistry'\n            },\n            {\n                id: 2,\n                category: 'Community Medicine'\n            },\n            {\n                id: 3,\n                category: 'Embryology'\n            },\n            {\n                id: 4,\n                category: 'Genetic'\n            },\n            {\n                id: 5,\n                category: 'Histology'\n            },\n            {\n                id: 6,\n                category: 'Microbiology'\n            },\n            {\n                id: 7,\n                category: 'Pathology'\n            },\n            {\n                id: 8,\n                category: 'Pharmacology'\n            },\n            {\n                id: 9,\n                category: 'Physiology'\n            },\n        \n        ]\n    },\n    {\n        key: 'Dominic',\n        id: 1,\n        category: \"Clinical Science\",\n        publisher: 'We have more than 3000 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"Anesthesia\"\n            },\n            {\n                id: 1,\n                category: 'Cardiology'\n            },\n            {\n                id: 2,\n                category: 'Community Medicine'\n            },\n            {\n                id: 3,\n                category: 'Emergency'\n            },\n            {\n                id: 4,\n                category: 'ENT'\n            },\n            {\n                id: 6,\n                category: 'Endocrinology'\n            },\n            {\n                id: 7,\n                category: 'Forensic Science'\n            },\n            {\n                id: 8,\n                category: 'Gastroenterology'\n            },\n            {\n                id: 9,\n                category: 'Genetic'\n            },\n            {\n                id: 10,\n                category: 'Gynoobs'\n            },\n            {\n                id: 11,\n                category: 'Internal Medicine'\n            },\n            {\n                id: 12,\n                category: 'Nephrology'\n            },\n            {\n                id: 13,\n                category: 'Neurology'\n            },\n            {\n                id: 14,\n                category: 'Opthalmology'\n            },\n            {\n                id: 15,\n                category: 'Orthopaedic'\n            },\n            {\n                id: 16,\n                category: 'Other Clinical'\n            },\n            {\n                id: 17,\n                category: 'Pediatric'\n            },\n            {\n                id: 18,\n                category: 'Phychiatry'\n            },\n            {\n                id: 19,\n                category: 'Radiology'\n            },\n            {\n                id: 20,\n                category: 'Rheumatology'\n            },\n            {\n                id: 21,\n                category: 'Surgery'\n            },\n\n\n        ]\n    },\n    {\n        key: 'James',\n        id: 2,\n        category: \"Dental\",\n        publisher: 'We have more than 500 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n\n            {\n                id: 0,\n                category: 'Dental Materials'\n            },\n            {\n                id: 1,\n                category: 'Forensic Dentistry'\n            },\n            {\n                id: 2,\n                category: 'Oral and Maxillo facial Surgery'\n            },\n            {\n                id: 3,\n                category: 'Oral Medicine Radiology'\n            },\n            {\n                id: 4,\n                category: 'Oral Pathology'\n            },\n            {\n                id: 5,\n                category: 'Orthodontics'\n            },\n            {\n                id: 6,\n                category: 'Period ontology'\n            },\n            {\n                id: 7,\n                category: 'Prosthodontics'\n            },\n            {\n                id: 8,\n                category: 'Public Health Dentistry'\n            },\n            {\n                id: 9,\n                category: 'conservative dentistry'\n            },\n            {\n                id: 10,\n                category: 'oral anatomy'\n            },\n\n        ]\n    },\n    {\n        key: 'Devin',\n        id: 3,\n        category: \"Nursing\",\n        publisher: 'We have more than 300 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"Child Health Nursing\"\n            },\n            {\n                id: 1,\n                category: 'Communication and Educational Technology'\n            },\n            {\n                id: 2,\n                category: 'Community Health Nursing'\n            },\n            {\n                id: 3,\n                category: 'English for Nursing'\n            },\n            {\n                id: 4,\n                category: 'Fundamental Of Nursing'\n            },\n            {\n                id: 5,\n                category: 'Gerontological Nursing'\n            },\n            {\n                id: 6,\n                category: 'Management Of Nursing Services and Education'\n            },\n            {\n                id: 7,\n                category: 'Medical Surgical Nursing'\n            },\n            {\n                id: 8,\n                category: 'MidWifery And Obstetrical Nursing'\n            },\n            {\n                id: 9,\n                category: 'Nursing Pharmacology'\n            },\n            {\n                id: 10,\n                category: 'Nutrition'\n            },\n            {\n                id: 11,\n                category: 'Pathology and Genetics'\n            },\n            {\n                id: 12,\n                category: 'Psychiatric Nursing'\n            },\n            {\n                id: 13,\n                category: 'Sociology'\n            },\n        ]\n    },\n    {\n        id: 5,\n        category: \"MCQ\",\n        publisher: 'We have more than 4000 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"MCQ MBBS\"\n            },\n            {\n                id: 1,\n                category: 'MCQ Dental'\n            },\n            {\n                id: 2,\n                category: 'Medical Surgical Nursing'\n            },\n        ]\n    },\n    {\n        key: 'Daan',\n        id: 6,\n        category: \"ENTRANCE\",\n        publisher: 'We have more than 1000 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"USMLE\"\n            },\n            {\n                id: 1,\n                category: 'NBDE'\n            },\n            {\n                id: 2,\n                category: 'AIIMS/NEET PG'\n            },\n            {\n                id: 3,\n                category: 'NCLEX-RN'\n            },\n        ]\n    },\n]\nconst slideCategories = [\n    {\n        key: 'Jacksoxn',\n        id: 0,\n        category: \"Basic Science\",\n        publisher: 'We have more than 5000 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"Anatomy\"\n            },\n            {\n                id: 1,\n                category: 'Biochemistry'\n            },\n            {\n                id: 2,\n                category: 'Histology'\n            },\n            {\n                id: 3,\n                category: 'Microbiology'\n            },\n            {\n                id: 4,\n                category: 'Pathology'\n            },\n            {\n                id: 5,\n                category: 'Pharmacology'\n            },\n            {\n                id: 6,\n                category: 'Physiology'\n            },\n          \n        \n        ]\n    },\n    {\n        key: 'Dominic',\n        id: 1,\n        category: \"Clinical Science\",\n        publisher: 'We have more than 3000 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"Anesthesia\"\n            },\n            {\n                id: 1,\n                category: \"Dental\"\n            },\n            {\n                id: 2,\n                category: 'Emergency'\n            },\n            {\n                id: 3,\n                category: 'ENT'\n            },\n            {\n                id: 4,\n                category: 'Forensic Science'\n            },\n            {\n                id: 5,\n                category: 'Gyno/Obs'\n            },\n            {\n                id: 6,\n                category: 'Internal Medicine'\n            },\n            {\n                id: 7,\n                category: 'Opthalmology'\n            },\n            {\n                id: 8,\n                category: 'Orthopaedic'\n            },\n            {\n                id: 9,\n                category: 'Pediatric'\n            },\n            {\n                id: 10,\n                category: 'Psychiatry'\n            },\n            {\n                id: 11,\n                category: 'Radiology'\n            },\n            {\n                id: 12,\n                category: 'Surgery'\n            },\n\n        ]\n    },\n    {\n        key: 'James',\n        id: 2,\n        category: \"Dental\",\n        publisher: 'We have more than 500 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n\n            {\n                id: 0,\n                category: \"Conservative Dentistry\"\n            },\n            {\n                id: 1,\n                category: 'Dental Materials'\n            },\n            {\n                id: 2,\n                category: 'Forensic Dentistry'\n            },\n            {\n                id: 3,\n                category: 'Oral Anatomy'\n            },\n            {\n                id: 4,\n                category: 'Oral And Maxillofacial Surgery'\n            },\n            {\n                id: 5,\n                category: 'Oral Medicine / Radiology'\n            },\n            {\n                id: 6,\n                category: 'Oral Pathology'\n            },\n            {\n                id: 7,\n                category: 'Orthodontics'\n            },\n            {\n                id: 8,\n                category: ' Pediatric / Preventive Dentistry '\n            },\n            {\n                id: 9,\n                category: 'Periodontology'\n            },\n            {\n                id: 10,\n                category: 'Prosthodontics'\n            },\n            {\n                id: 11,\n                category: 'Public Health Dentistry'\n            },\n            {\n                id: 12,\n                category: 'Community Dentisty'\n            },\n           \n        ]\n    },\n    {\n        key: 'Devin',\n        id: 3,\n        category: \"Nursing\",\n        publisher: 'We have more than 300 books that falls inside Basic Science. Hope you find your choice.',\n        subCategories: [\n            {\n                id: 0,\n                category: \"Child Health Nursing\"\n            },\n            {\n                id: 1,\n                category: 'Gerontological Nursing'\n            },\n            {\n                id: 2,\n                category: 'Community Health Nursing'\n            },\n            {\n                id: 3,\n                category: 'Nursing Research'\n            },\n            {\n                id: 4,\n                category: 'Nursing Administration'\n            },\n            {\n                id: 5,\n                category: 'Management Health Economics'\n            },\n            {\n                id: 6,\n                category: 'Medical Surgical Nursing'\n            },\n            {\n                id: 7,\n                category: 'Medwifery And Obstetrical Nursing'\n            },\n            {\n                id: 8,\n                category: 'Fundamental Of Nursing'\n            },\n            {\n                id: 9,\n                category: 'Family Reproductive Health Nursing'\n            },\n            {\n                id: 10,\n                category: 'Nutrition And Diet Therapy'\n            },\n            {\n                id: 11,\n                category: 'Psychiatric Nursing'\n            },\n            {\n                id: 12,\n                category: 'Sociology'\n            },\n            {\n                id: 13,\n                category: 'Advance Nursing Practice'\n            },\n            {\n                id: 14,\n                category: 'Adult Health Nursing'\n            },\n           \n        ]\n    },\n   \n   \n]\n\nexport { bookCategories ,slideCategories}\n","\nimport { collection, doc, endBefore, getDoc, getDocs, getFirestore, limit, onSnapshot, orderBy, query, setDoc, startAfter } from \"firebase/firestore\";\nimport { slideCategories } from \"../constants/Book/BookCategories\";\n\n\nconst randomSubcategory = category => {\n    let filtered = slideCategories.filter(\n        slideCategory => slideCategory.category === category,\n    );\n    let subCategories = filtered[0].subCategories;\n    \n\n    return subCategories[Math.floor(Math.random() * (subCategories?.length - 1))]\n        .category;\n}\n\nexport async function fetchWithCollectionName(collectionName) {\n    //  const db=getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n        const {firestore:{db,getDocs,collection}}=await getFirebaseAll()\n          return await getDocs(collection(db,collectionName))\n            .then(querySnapshot => {\n                let allData = []\n                querySnapshot.forEach(ele => {\n                    allData.push(ele.data());\n                })\n                return allData;\n            })\n    } catch (error) {\n        console.log(\"Error while fetching slide and books\", error)\n    }\n}\n\nexport async function fetchOnSnapshotWithNestedCollectionName(firstCollectionName, firstDocName, secondDocName, secondCollectionName) {\n    // const db=getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n      const {firestore:{db,doc,onSnapshot}}=await getFirebaseAll()\n        const docRef = doc(db,firstCollectionName,firstDocName,secondCollectionName,secondDocName)\n            onSnapshot(docRef,(querySnapshot) => {\n                let allData = []\n                querySnapshot.forEach(ele => {\n                    allData.push(ele?.data());\n                })\n                return allData;\n            })\n    } catch (error) {\n        console.log(\"Error while fetching slide and books\", error)\n    }\n}\nexport async function setWithNestedCollectionName(firstCollectionName, firstDocName, secondDocName, secondCollectionName, data) {\n    // const db=getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n\n        const{firestore:{db,setDoc,doc}}=await getFirebaseAll()\n       \n         return await setDoc(doc(db,firstCollectionName,firstDocName,secondCollectionName,secondDocName),data)\n\n    } catch (error) {\n        console.log(\"Error while fetching slide and books\", error)\n    }\n}\n\nexport async function fetchSlidesAndBooksOrderedByName(collectionName, orderByName) {\n    // const db=getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n       const{firestore:{db,getDocs,query,collection,orderBy}}=await getFirebaseAll()\n        return await getDocs(query(collection(db,collectionName),\n        orderBy(orderByName)))\n            .then(querySnapshot => {\n                let allData = []\n                querySnapshot.forEach(ele => {\n                    allData.push(ele.data());\n                })\n                return allData;\n            })\n    } catch (error) {\n        console.log(\"Error while fetching slide and books\", error)\n    }\n}\n\nexport async function fetchAllBooksAndSlidesDocId(collectionName) {\n    // const db =getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n      const{firestore:{db,getDocs,collection}}=await getFirebaseAll()\n        return await getDocs(collection(db,collectionName))\n            .then(querySnapshot => {\n                let allData = []\n                querySnapshot.forEach(ele => {\n                    allData.push(ele.id);\n                })\n                return allData;\n            })\n    } catch (error) {\n        console.log(\"Error while fetching slide and books doc id\", error)\n    }\n}\n\nexport async function fetchUserPreferredBooksAndSlides(collectionName, userId) {\n    // const db=getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n        const{firestore:{db,getDoc,doc,getDocs,collection}}=await getFirebaseAll()\n        let recommendedData = [];\n     \n            return await getDoc(doc(db,'Web-User-Data',userId,'User-Preference',userId))\n            .then((res) => {\n                if (res.data()) {\n                    let subjects = res.data()?.preference.subjects;\n\n                    return subjects?.map(async (category, index) => {\n                       \n                        return await getDocs(collection(db,`K-Slides-${(category?.subjectName).replace(/\\s|\\/g, \"\"/g, \"\")}-${(randomSubcategory(category?.subjectName)).replace(/\\s|\\//g, \"\")}`))\n                            .then((documentSnapshot) => {\n                                if (documentSnapshot) {\n                                    documentSnapshot.forEach((doc) => {\n                                        recommendedData.push(doc.data())\n                                    })\n                                    if (index === subjects?.length - 1) {\n                                        return recommendedData\n                                    }\n                                }\n                            })\n\n                    })\n                }\n            })\n\n    } catch (err) {\n        console.log(\"Error while fetching preference data\", err)\n    }\n}\n\n\n\nexport async function fetchSlidesAndBooksOrderedByNameWithLimit(collectionName, orderByName, pageLimit) {\n    // alert(collectionName)\n    // const db=getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n        // return await firebase.firestore()\n        //     .collection(collectionName)\n        //     .orderBy(orderByName)\n        //     .limit(pageLimit)\n        //     .get()\n        const{firestore:{db,getDocs,query,collection,orderBy,limit}}=await getFirebaseAll()\n         return await getDocs(query(collection(db,collectionName),\n         orderBy(orderByName),\n         limit(pageLimit)))\n\n            .then(querySnapshot => {\n                if (!querySnapshot?.empty) {\n                    let allData = []\n                    querySnapshot.forEach(ele => {\n                        allData.push(ele.data());\n                    })\n                    let firstData = querySnapshot.docs[0]\n                    let lastData = querySnapshot.docs[querySnapshot.docs.length - 1]\n                    // console.log(\"INITIAL DATA\")\n                    return { allData, firstData, lastData };\n                } else {\n                    return false;\n                }\n            })\n    } catch (error) {\n        console.log(\"Error while fetching slide and books with limit\", error)\n    }\n}\n\nexport async function fetchStartAfterBooksAndSlides(collectionName, orderByName, lastBook, pageLimit) {\n    // const db = getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n        // return await firebase.firestore()\n        //     .collection(collectionName)\n        //     .orderBy(orderByName)\n        //     .startAfter(lastBook)\n        //     .limit(pageLimit)\n        //     .get()\n        const {firestore:{db,getDocs,query,collection,orderBy,startAfter,limit}}=await getFirebaseAll()\n    if(lastBook && pageLimit){\n        return await getDocs(query(collection(db,collectionName),\n        orderBy(orderByName),\n        startAfter(lastBook),\n        limit(pageLimit)))\n            .then(querySnapshot => {\n                let allData = []\n                querySnapshot.forEach(ele => {\n                    // console.log(\"This is data\",ele.data())\n                    allData.push(ele.data());\n                })\n                // console.log(\"Next triggered\", allData)\n                // console.log(\"Next triggered\", collectionName, orderByName, lastBook, pageLimit)\n                return allData;\n            })\n    }else{\n        return null;\n    }\n    } catch (error) {\n        console.log(\"Error while fetching start after slide and books\", error)\n    }\n}\n\nexport async function fetchEndBeforeBooksAndSlides(collectionName, orderByName, firstBook, pageLimit) {\n    // const db = getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n        // return await firebase.firestore()\n        //     .collection(collectionName)\n        //     .orderBy(orderByName)\n        //     .endBefore(firstBook)\n        //     .limit(pageLimit)\n        //     .get()\n        const{firestore:{db,getDocs,query,collection,orderBy,endBefore,limit}}=await getFirebaseAll()\n        return await getDocs(query(collection(db,collectionName),\n        orderBy(orderByName),\n        endBefore(firstBook),\n        limit(pageLimit)))\n            .then(querySnapshot => {\n                let allData = []\n                querySnapshot.forEach(ele => {\n                    // console.log(\"This is data\",ele.data())\n                    allData.push(ele.data());\n                })\n                // console.log(\"Previous triggered\", allData)\n                // console.log(\"Previous triggered\", collectionName, orderByName, firstBook, pageLimit)\n                return allData;\n            })\n    } catch (error) {\n        console.log(\"Error while fetching start after slide and books\", error)\n    }\n}\n\nexport async function addUserVisited(uid, type, title = '', category = '', subCategory = '') {\n    // const db = getFirestore()\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n    try {\n        \n        // firebase.firestore().collection('Web-Uid-To-Username')\n        //     .doc(uid)\n        //     .get()\n        const {firestore:{db,getDoc,doc,setDoc}}=await getFirebaseAll()\n        getDoc(doc(db,'Web-Uid-To-Username',uid))\n            .then((res) => {\n                // firebase.firestore().collection('Web-User-Data')\n                //     .doc(res?.data()?.username)\n                //     .collection('User-Visited')\n                //     .doc(title)\n                //     .set({\n                //         title: title,\n                //         type: type,\n                //         category: category,\n                //         subCategory: subCategory,\n                //         createdAt: new Date()\n                //     })\n                setDoc(doc(db,'Web-User-Data',res?.data()?.username,'User-Visited',title),\n                {\n                    title: title,\n                    type: type,\n                    category: category,\n                    subCategory: subCategory,\n                    createdAt: new Date()\n                })\n                    .then(() => {\n                    })\n            })\n    } catch (error) {\n        console.log('Error adding search history', error)\n    }\n}\n"],"names":["bookCategories","key","id","category","publisher","subCategories","slideCategories","fetchAllBooksAndSlidesDocId","_x13","_fetchAllBooksAndSlidesDocId","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee5","collectionName","getFirebaseAll","_yield$getFirebaseAll9","_yield$getFirebaseAll10","db","_getDocs3","_collection3","_context5","prev","next","Promise","all","then","_ref9","firestore","_slicedToArray","sent","getDocs","collection","querySnapshot","allData","forEach","ele","push","abrupt","t0","console","log","stop","fetchSlidesAndBooksOrderedByNameWithLimit","_x16","_x17","_x18","_fetchSlidesAndBooksOrderedByNameWithLimit","_callee8","orderByName","pageLimit","_yield$getFirebaseAll13","_yield$getFirebaseAll14","_getDocs5","_query2","_collection5","_orderBy2","_limit","_context8","_ref14","query","orderBy","limit","empty","data","firstData","docs","lastData","length","fetchStartAfterBooksAndSlides","_x19","_x20","_x21","_x22","_fetchStartAfterBooksAndSlides","_callee9","lastBook","_yield$getFirebaseAll15","_yield$getFirebaseAll16","_getDocs6","_query3","_collection6","_orderBy3","_startAfter","_limit2","_context9","_ref16","startAfter","addUserVisited","_x27","_x28","_addUserVisited","_callee11","uid","type","title","subCategory","_yield$getFirebaseAll19","_yield$getFirebaseAll20","_getDoc2","_doc4","_setDoc2","_args11","_context11","undefined","_ref20","getDoc","doc","setDoc","res","_res$data2","username","createdAt","Date"],"sourceRoot":""}