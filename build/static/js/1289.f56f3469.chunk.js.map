{"version":3,"file":"static/js/1289.f56f3469.chunk.js","mappings":"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","sources":["components/global/icons/search.js","components/loading/index.js","components/navbarSearch/index.js","customHooks/index.js","functions/commonMethod.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import React from 'react'\n\nconst SearchIcon = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" className={props.className} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n</svg>\n}\n\nexport default SearchIcon","import React from 'react';\nimport './index.scss'\n\nconst Loading = ()=>{\n    return(\n\n\n<div className=\"loading-wrapper\"> \n\n    <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n</div>\n\n    )\n}\n\nexport default Loading;","\n// import { collection, getFirestore, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { toast } from 'react-toastify';\nimport Loading from '../../components/loading';\nimport useDocId from \"../../customHooks\";\nimport Loadable from 'react-loadable';\n\nimport { logEventWithParams } from \"../../functions/commonMethod\";\nimport { AuthContext } from '../signUp/authMethods/authentication';\nimport './index.scss';\nimport SearchIcon from '../global/icons/search';\n\nconst Downshift =  Loadable({\n  loader: () => import('downshift'),\n  loading() {\n    return <div className='loading'>Loading...</div>\n  }\n});\n\nconst NavbarSearch = () => {\n  let inputRef = useRef();\n  const ref = useRef()\n  let history = useHistory();\n  const { user , username:usernameauth } = useContext(AuthContext)\n  const location = useLocation();\n  const [inputText, setInputText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { slideDocId, bookDocId, profileDocId } = useDocId(inputText);\n  const [allDocId, setAllDocId] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [fullSearch, setFullSearch] = useState(false);\n  const [downshiftmatchinglist, setDownshiftMatchingList] = useState([0])\n  const [userSearchHistoryText,setUserSearchHistoryText]=useState(null)\n\n\n\n\n  function search(value = null) {\n    if (inputText !== \"\") {\n      logEventWithParams('search_entered', { searchText: value ? value : inputText })\n      setFullSearch(false)\n      setIsOpen(false)\n      history.push({\n        pathname: `/search/searchtext/${value ? value : inputText}`,\n      })\n\n    } else {\n      toast.error(\"Please enter some text\",{theme:'dark',hideProgressBar:true})\n    }\n  }\n\n  //LISTENER TO CLOSE THE SEARCH HINTS CONTAINER ON CLICKING OUTSIDE THE CONTAINER\n  useEffect(() => {\n\n    let isMounted=true\n\n    const checkIfClickedOutside = e => {\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\n        setInputText('')\n        setFullSearch(false)\n        setIsOpen(false)\n      }else if(ref.current && !ref.current.contains(e.target)){\n        setFullSearch(false)\n      }\n    }\n\n    if(isMounted){\n      document.addEventListener(\"mousedown\", checkIfClickedOutside)\n    }\n    return () => {\n\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside)\n      isMounted=false\n    }\n  }, [isOpen])\n\n  //SET THE SEARCH PARAMETER FROM LINK TO THE INPUT FIELD\n  useEffect(() => {\n    let isMounted = true;\n    if (isMounted) {\n      setInputText(location.search.replace(/\\?/g, \"\"));\n    }\n    return () => {\n      isMounted = false;\n    }\n  }, [location.search])\n\n  //COMBINES AND SETS ALL THE DOC ID FOR SEARCH'S HINTS\n  useEffect(() => {\n    let isMounted=true\n\n    if(isMounted){\n      setAllDocId([...slideDocId,...bookDocId,...profileDocId])\n    }\n\n    return ()=>{\n      isMounted=false\n    }\n   \n  }, [slideDocId, bookDocId,profileDocId])\n\n\n  useEffect(() => {\n    let isMounted=true\n\n    if(isMounted){\n      function getItems(filter) {\n    \n        if (filter!== '' && filter?.length < 3 ) {\n    \n          let filteredData=[]\n          if(userSearchHistoryText){\n           filteredData=[...filteredData,...userSearchHistoryText]\n            filter=[...filter,...userSearchHistoryText]\n          }\n          return filteredData.length ? filteredData : [filter]\n        }\n         else if (filter && filter !== '' && filter?.length >= 3 ) {\n    \n          let filteredData = allDocId.filter(d => {\n            return d.toLowerCase().replace(/\\s/g, '').includes(filter.toLowerCase().replace(/\\s/g, ''))\n          }\n          )\n            if(userSearchHistoryText){\n              filteredData=[...filteredData,...userSearchHistoryText]\n              filter=[...filter,...userSearchHistoryText]\n            }\n    \n          return filteredData.length ? filteredData : [filter]\n        } else {\n          setIsOpen(false);\n          return []\n        }\n      }\n      setDownshiftMatchingList(() => getItems(inputText))\n\n    }\n\n\n    return ()=>{\n      isMounted=false\n    }\n\n  }, [allDocId,inputText,userSearchHistoryText])\n\n  //DEBOUNCE USED TO EXECUTE CODE AFTER CERTAIN TIME \n  const openSearchHints = (value) => {\n    setInputText(value)\n    if (allDocId?.length > 0 && value !== '') {\n      setLoading(false)\n      setFullSearch(true)\n      setIsOpen(true)\n    }\n  }\n\n\n\n// const db=getFirestore();\nconst getFirebaseAll=()=>{\n  return Promise.all([\n    import('../../firebase/firestore')\n  ])\n  .then(([firestore])=>{\n    return {firestore}\n  })\n}\n//fetched logged user history a\n  useEffect(async() => {\n    let isMounted=true\n\n    if(isMounted && user && usernameauth){\n      try {\n      const {firestore:{db,collection,onSnapshot}}=await getFirebaseAll()\n        const colRef = collection(db,'Web-User-Data',usernameauth,'Search-History')\n        onSnapshot(colRef,(res)=>{\n          if(res){\n            \n            let allHistory = []\n            res.forEach(ele => {\n                allHistory.push(ele.data());\n            })\n         \n            if(allHistory){\n                 let allHistoryText=[]\n                allHistory.forEach(element => {\n                allHistoryText.push(element.searchedText)\n              });\n              if(allHistoryText){\n             \n                setUserSearchHistoryText(allHistoryText)\n                \n              }\n             \n            }\n          }\n        })\n       \n        \n      } catch (error) {\n        console.log('error fetching search history',error)\n        \n      }\n\n    }\n\n    return () => {\n      isMounted=false\n    }\n  }, [usernameauth,user])\n\n\n\n \n\n\n  return (\n    <div className='topNavBarSearchContainer'>\n      <div ref={ref} className={`topNavBarSearch ${fullSearch ? 'topNavBarFullSearch' : ''}`}>\n        <SearchIcon className='topNavBarSearch-icon' />\n       \n        <Downshift\n          onChange={selection =>\n            console.log(selection)\n          }\n          onOuterClick={() => setFullSearch(false)}\n\n          //ONINPUT VALUE IS USED SEPARATELY TO TRIGGER DEBOUNCE BECAUSE DEBOUNCE ONLY WORKS WITH CONST(NOTE: DON'T USE FUNCTION FOR DEBOUNCE)\n          onInputValueChange={openSearchHints}\n          itemToString={item => (item ? item : '')}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            getMenuProps,\n            highlightedIndex,\n            \n            getRootProps,\n          }) => (\n            <div className='navsearch'\n            >\n              <div\n                className=\"search-input-wrapper\"\n                {...getRootProps({}, { suppressRefError: true })}\n              >\n                <input\n                  ref={inputRef}\n                  onFocus={() => setFullSearch(true)}\n                  placeholder=\"Search medical books , slides ,articles , notes , journals ...\"\n                  type='search'\n                  {...getInputProps({\n                    onKeyDown: event => {\n                      if (event.key === 'Enter') {\n                        search()\n                      }\n                    },\n                  })}\n                  value={inputText}\n                />\n              </div>\n              {\n                loading || isOpen ?\n                  <div\n                    className='menu-container'>\n                    {\n                      loading ?\n                        <div className='italic-text'>\n                          <i>Searching....  {`'${inputText}'`}</i>\n                          <Loading />\n                        </div>\n                        :\n                        <ul className='listing' {...getMenuProps()}>                          \n                          <li\n                          \n                            onClick={() => {\n                              search(inputText)\n                            }}\n                          >\n                            <SearchIcon className='topNavBarSearch-icon list-icon' /> <span>{inputText}\n                            </span>\n                          </li>\n\n                          {isOpen\n                            ? downshiftmatchinglist.map((item, index) => {\n                              return (\n                                <li\n                                  {...getItemProps({\n                                    key: item+index,\n                                    index,\n                                    item,\n                                    style: {\n                                      backgroundColor:\n                                        highlightedIndex === index ? '#12D288' : 'white',\n                                      paddingTop: 8,\n                                      paddingBottom: 8,\n                                      paddingLeft: 5,\n                                      display: \"flex\",\n                                      justifyContent: \"space-between\",\n                                      alignItems: 'center'\n                                    },\n                                  })}\n                                \n                                >\n                                  <span onClick={() =>{search(item) }}>\n                                    {item?.split(\"-\", 1)[0]}\n                                  </span>\n                                \n                                </li>\n\n                              )\n                            })\n                            : null\n                          }\n                        </ul>\n                    }\n                  </div>\n                  :\n                  null\n              }\n            </div>\n          )}\n        </Downshift>\n      </div>\n    </div>\n  )\n}\nexport default NavbarSearch;","import React, { useState, useEffect } from 'react';\nimport { fetchAllBooksAndSlidesDocId } from '../functions/firebaseMethod';\n// import { collection, getDocs, getFirestore } from 'firebase/firestore';\n\nfunction useDocId(searchText) {\n    const [slideDocId, setSlideDocId] = useState([]);\n    const [bookDocId, setBookDocId] = useState([]);\n    const [searchTagDocId, setSearchTagDocId] = useState([]);\n    const [profileDocId, setProfileDocId] = useState([])\n    // const fire = getFirestore();\n  \n    useEffect(() => {\n        let isMounted = true;\n        if (isMounted && searchText?.length ) {\n            fetchAllBooksAndSlidesDocId('AllSlidesDataLockDownVersions').then((res) => {\n                setSlideDocId(res);\n            })\n\n            fetchAllBooksAndSlidesDocId('K-Books').then((res) => {\n                setBookDocId(res);\n            })\n            //@Regarding profile search\n            // Username will come from tags if user has uploaded.. if you want to search profile as well then uncomment this\n            // getDocs(collection(fire, 'Web-Uid-To-Username'))\n               \n            //     .then(querySnapshot => {\n            //         let allData = []\n            //         querySnapshot.forEach((doc) => {\n            //             allData.push(doc.data().username)\n            //         })\n            //         setProfileDocId(allData)\n            //     })\n\n            fetchAllBooksAndSlidesDocId('Web-SearchByTag').then((res) => {\n                setSearchTagDocId(res);\n            })\n\n        }\n    }, [searchText]);\n    return { slideDocId, bookDocId, profileDocId, searchTagDocId };\n}\n\n\nexport default useDocId;\n","import {getAnalytics, logEvent} from 'firebase/analytics';\nexport const logEventWithoutParams = (eventName = \"some_event_name\") => {\n    try {\n        logEvent(getAnalytics(),eventName)\n    } catch (error) {\n        console.log(`EVENT WITHOUT PARAMS ERROR LOGGED: ${eventName}, ${error}`)\n\n    }\n\n}\n\nexport const logEventWithParams = (eventName = \"some_event_name\", params = {}) => {\n    try {\n        logEvent(getAnalytics(),eventName, params)\n    } catch (error) {\n        console.log(`EVENT WITHOUT PARAMS ERROR LOGGED: ${eventName}, ${error} ,${params}`)\n    }\n}\n\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["props","_jsx","xmlns","className","fill","viewBox","stroke","children","strokeLinecap","strokeLinejoin","strokeWidth","d","_jsxs","Downshift","Loadable","loader","loading","inputRef","useRef","ref","history","useHistory","_useContext","useContext","AuthContext","user","usernameauth","username","location","useLocation","_useState","useState","_useState2","_slicedToArray","inputText","setInputText","_useState3","_useState4","setLoading","_useDocId","useDocId","slideDocId","bookDocId","profileDocId","_useState5","_useState6","allDocId","setAllDocId","_useState7","_useState8","isOpen","setIsOpen","_useState9","_useState10","fullSearch","setFullSearch","_useState11","_useState12","downshiftmatchinglist","setDownshiftMatchingList","_useState13","_useState14","userSearchHistoryText","setUserSearchHistoryText","search","value","arguments","length","undefined","logEventWithParams","searchText","push","pathname","concat","toast","theme","hideProgressBar","useEffect","isMounted","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","replace","_toConsumableArray","filter","_filter","_filter2","filteredData","toLowerCase","includes","getItems","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getFirebaseAll","_yield$getFirebaseAll2","db","collection","onSnapshot","colRef","_context","prev","next","Promise","all","then","_ref","firestore","sent","res","allHistory","forEach","ele","data","allHistoryText","element","searchedText","t0","console","log","abrupt","stop","SearchIcon","onChange","selection","onOuterClick","onInputValueChange","itemToString","item","_ref4","getInputProps","getItemProps","getMenuProps","highlightedIndex","getRootProps","_objectSpread","suppressRefError","onFocus","placeholder","type","onKeyDown","event","key","Loading","onClick","map","index","style","backgroundColor","paddingTop","paddingBottom","paddingLeft","display","justifyContent","alignItems","split","setSlideDocId","setBookDocId","searchTagDocId","setSearchTagDocId","fetchAllBooksAndSlidesDocId","logEventWithoutParams","eventName","logEvent","getAnalytics","error","params","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","i","source","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}