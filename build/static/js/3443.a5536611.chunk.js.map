{"version":3,"file":"static/js/3443.a5536611.chunk.js","mappings":"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","sources":["functions/newTabMethod.js","functions/tagColorAndReadTimeMethod.js","pages/News/components/author-date-readTime/index.js","pages/News/components/recent/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import { logEventWithParams } from \"./commonMethod\";\n\n\nexport const newTab=(url,title,analyticsDesc)=>{\n    window.open(\n       url, \"_blank\");\n       logEventWithParams(analyticsDesc, { Title: title })\n}","export const getColorByIndex=(index)=>{\n\n    let color = \"yellow\";\n    if (index % 3 === 0) {\n        color = 'red'\n    } else if (index % 2 === 0) {\n        color = 'skyblue'\n    }\n    return color;\n}\n\nexport  const getReadTime = (text) => {\n    const wordsPerMinute = 120;\n    const textLength = text?.split(\" \").length;\n    let minutesToRead = Math.ceil(textLength / wordsPerMinute);\n    return minutesToRead;\n\n}\n\nexport const getColorById =(id)=>{\n    let color='yellow'\n    if(id===0){\n        color = 'red'\n    }\n   else if (id % 2 === 0) {\n       \n        color='yellow'\n    } else if(id%2===1) {\n        color = 'skyblue'\n    }\n    return color;\n}","import React,{useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport './_authorDateReadDate.scss'\nconst AuthorDateRead = ({author,authorColor,link,date,readTime,color,fontSize}) => {\n\n  \n    const [isType1True,setIsType1True]=useState(false);\n    const [isType2True,setIsType2True]=useState(false);\n    const [isType3True,setIsType3True]=useState(false);\n\n\n    useEffect(() => {\n\n        const check=()=>{\n            if(typeof author==='string' && typeof date==='string' && typeof readTime==='string'){\n                setIsType1True(!isType1True)\n            }\n            else if(typeof date==='string' && typeof readTime==='string'){\n                setIsType2True(!isType2True)\n            }\n            else if(typeof date==='string'){\n                setIsType3True(!isType3True)\n            }\n            else{\n                console.log('no match');\n            }\n\n           \n        }\n        check();\n       \n    }, [])\n\n    return (\n        <>\n         { isType1True?\n\n            <div className='authorDateReadDate-wrapper' style={{fontSize:`${fontSize}`}}>\n                <div className='authorDateReadDate-wrapper-author'>\n                    <span className='authorDateReadDate-wrapper-author-firstSpan' style={{fontSize:`${fontSize}`,color:`${color}`}}>\n                        By:<Link to={link} style={{fontSize:`${fontSize}`,color:`${authorColor}`}}>{author}</Link>\n                    </span>\n                </div>\n                <div className='authorDateReadDate-wrapper-dot' style={{color:`${color}`,border:`1px solid ${color}`}}></div>\n                <div className='authorDateReadDate-wrapper-date' style={{color:`${color}`}}>{date}</div>\n                <div className='authorDateReadDate-wrapper-dot' style={{color:`${color}`,border:`1px solid ${color}`}} ></div>\n                <div className='authorDateReadDate-wrapper-readTime' style={{color:`${color}`}}>{readTime}</div>\n\n            </div>\n           :\n           \"\"\n        }\n\n        {\n            isType2True?\n\n            <div className='authorDateReadDate-wrapper'>\n                <div className='authorDateReadDate-wrapper-date' style={{color:`${color}`,fontSize:`${fontSize}`}}>{date}</div>\n                <div className='authorDateReadDate-wrapper-dot' style={{color:`${color}`,border:`1px solid ${color}`}}></div>\n                <div className='authorDateReadDate-wrapper-readTime' style={{color:`${color}`,fontSize:`${fontSize}`}}>{readTime}</div>\n            </div>\n            :\n            \"\"\n        }\n\n        { isType3True?\n\n            <div className='authorDateReadDate-wrapper'>\n                <div className='authorDateReadDate-wrapper-date' style={{color:`${color}`,fontSize:`${fontSize}`}}>{date}</div>\n            </div>\n            :\n            \"\"\n        }\n            \n\n            \n        </>\n    )\n}\n\nexport default React.memo(AuthorDateRead)\n","import React from 'react'\n\nimport './_recent.scss'\nimport AuthorDateRead from '../author-date-readTime'\n// import { logEventWithParams } from '../../../../functions/commonMethod'\nimport shortid from  \"shortid\";\nimport { getReadTime } from '../../../../functions/tagColorAndReadTimeMethod';\nimport { newTab } from '../../../../functions/newTabMethod';\nconst Recent = ({ detailsRight }) => {\n \n\n    return (\n        <>\n            <div className=\"newsRecent-wrapper\">\n                <div className=\"newsRecent-wrapper-left\" style={{ backgroundImage: `url(${detailsRight[3]['media:thumbnail']?.$?.url})` }}>\n\n                    <div className=\"newsRecent-wrapper-left-mid\">\n                        \n                        <h3 className=\"newsRecent-wrapper-left-mid-head\"><a onClick={() => newTab(detailsRight[3]?.link, detailsRight[3]?.title,'web_article_detail_page_opened')}>{detailsRight[3]?.title}</a></h3>\n                        <AuthorDateRead link={detailsRight[3]?.link} date={new Date(detailsRight[3]?.isoDate).toDateString()} readTime={getReadTime(detailsRight[3]?.content) + 'min read'} color='#fff' fontSize='12px' />\n                    </div>\n\n                </div>\n\n                <div className=\"newsRecent-wrapper-right\">\n                    <h1 className=\"newsRecent-wrapper-right-head\">latest News</h1>\n                    <div className=\"newsRecent-wrapper-right-description\">\n                        {detailsRight?.filter((data, index) => index > 5 && index < 11).map((data, index) => (\n                            <div key={shortid.generate()} className=\"newsRecent-wrapper-right-description-wrapper\">\n                                <h3 className=\"newsRecent-wrapper-right-description-wrapper-head\" onClick={() => newTab(data?.link, data?.title,'web_article_detail_page_opened')}>{data?.title}</h3>\n                                <AuthorDateRead link={data.link} date={new Date(data.isoDate).toDateString()} readTime={getReadTime(data?.content) + 'min read'} color='#9f9f9f' fontSize='12px' />\n                            </div>\n                        ))}\n\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </>\n    )\n}\n\nexport default React.memo(Recent)\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["newTab","url","title","analyticsDesc","window","open","logEventWithParams","Title","getColorByIndex","index","color","getReadTime","text","textLength","split","length","Math","ceil","AuthorDateRead","_ref","author","authorColor","link","date","readTime","fontSize","_useState","useState","_useState2","_slicedToArray","isType1True","setIsType1True","_useState3","_useState4","isType2True","setIsType2True","_useState5","_useState6","isType3True","setIsType3True","useEffect","console","log","_jsxs","_Fragment","children","className","style","concat","_jsx","Link","to","border","React","Recent","_detailsRight$3$media","_detailsRight$3$media2","_detailsRight$3","_detailsRight$4","_detailsRight$5","_detailsRight$6","detailsRight","backgroundImage","$","onClick","_detailsRight$","_detailsRight$2","Date","isoDate","toDateString","content","filter","data","map","shortid","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","floor","push","splice","shuffle","get","characters","seed","lookup","counter","previousSeconds","generate","clusterWorkerId","str","seconds","now","random","format","number","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","id","RegExp","replace","test","randomByte","crypto","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","LN2","step"],"sourceRoot":""}