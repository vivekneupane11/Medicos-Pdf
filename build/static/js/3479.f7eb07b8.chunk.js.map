{"version":3,"file":"static/js/3479.f7eb07b8.chunk.js","mappings":"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","sources":["components/customHooks/viewsCount/index.js","components/global/images/index.js","components/loading/index.js","functions/commonMethod.js","functions/filterSlideSubCategory.js","components/global/icons/listCheck.js","pages/ViewPlaylist/index.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\n\nimport { useLocation } from 'react-router';\n// import {getDatabase, off, onValue, set, update,ref} from 'firebase/database'\n\nconst useViewsCount = (docId) => {\n    const [viewCount,setViewCount]=useState(null);\n    let location=useLocation()\n    let documentName=docId?.replace(/[#.[$]/g,'').replace(/]/,'').replace(/\\s/g,'')\n    // const database = getDatabase()\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../../../firebase/database')\n        ])\n        .then(([database])=>{\n            return{database}\n        })\n    }\n    \n    useEffect(async() => {\n        let isMounted=true;\n        \n        try {\n            const {database:{database,ref,onValue,set,update,off}}=await getFirebaseAll()\n            const refrence =ref(database,`viewCount/${location?.pathname.split('/')[1]}/${documentName}`)\n                const onValues=(res)=>{\n                    try{\n                        if(res?.val()){\n                                if(res?.val()?.viewCount){\n                                let views=res?.val()?.viewCount;\n                                setViewCount(views+1)\n                               \n    \n                               update(refrence,\n                               {\n                                viewCount:views+1,\n                               })\n                                }\n                        }\n                        else{\n                          \n                            set(refrence,\n                            {\n                             viewCount:1,\n                            })\n                            setViewCount(1)     \n                        }\n                        \n                    }catch(err){\n                    console.log(\"Error fetching count\", err);\n                }\n            }\n          \n            if(isMounted && docId){\n               \n                onValue(refrence,onValues,{onlyOnce: true})\n            }\n             \n            return () => {\n                off(refrence,onValues)\n                isMounted=false\n               \n            }\n            } catch (error) {\n                \n            }\n    }, [docId])\n\n    return viewCount\n}\n\nexport default useViewsCount\n","import React from 'react'\nimport { DisplayTitle } from '../Titles'\nimport './_images.scss'\n\nexport const Images = ({ Image, type, height, width }) => {\n    return (\n        <div>\n            <img className={`image ${type ? type : \"\"}`} src={Image} style={{ width, height }} alt='image'></img>\n        </div>\n    )\n}\nexport const Avatar = ({ Image, size, text }) => {\n    size = size || \"50px\"\n    return (\n\n        <div className=\"image-wrapper\" style={{ width: size, height: size }}>\n            {\n                Image ?\n                    <img className=\"avatar\" src={Image} style={{ width: size, height: size }} alt='image'></img>\n                    :\n                    <div className=\"avatar-text\" style={{ width: size, height: size }}>\n                        <DisplayTitle title={text?.substring(0, 1)} color='white' type=\"display4\" />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport const AvatarPlaceholder=({size})=>{\n    size = size || \"50px\"\n    return(\n        <div className=\"image-wrapper-placeholder\" style={{ width: size, height: size }}>\n      \n                {/* <img className=\"avatarPlaceholder\" style={{ width: size, height: size }} alt='image'></img> */}\n                \n        \n    </div>\n    )\n\n    \n}\n","import React from 'react';\nimport './index.scss'\n\nconst Loading = ()=>{\n    return(\n\n\n<div className=\"loading-wrapper\"> \n\n    <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n</div>\n\n    )\n}\n\nexport default Loading;","import {getAnalytics, logEvent} from 'firebase/analytics';\nexport const logEventWithoutParams = (eventName = \"some_event_name\") => {\n    try {\n        logEvent(getAnalytics(),eventName)\n    } catch (error) {\n        console.log(`EVENT WITHOUT PARAMS ERROR LOGGED: ${eventName}, ${error}`)\n\n    }\n\n}\n\nexport const logEventWithParams = (eventName = \"some_event_name\", params = {}) => {\n    try {\n        logEvent(getAnalytics(),eventName, params)\n    } catch (error) {\n        console.log(`EVENT WITHOUT PARAMS ERROR LOGGED: ${eventName}, ${error} ,${params}`)\n    }\n}\n\n","\nexport default function filterSlideSubcategory(subCategory) {\n    function capitalize(mySentence) {\n        const words = mySentence.split(\" \");\n\n        for (let i = 0; i < words.length; i++) {\n            words[i] = words[i][0]?.toUpperCase() + words[i]?.substr(1);\n        }\n\n        return words.join(\" \");\n    }\n    if (subCategory) {\n        let capitalizedWords = capitalize(subCategory)\n        // console.log('capitalize', capitalizedWords, subCategory)\n        let capatalizefinal =   capitalizedWords.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]\\s|[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]|\\s/g, '');\n        capatalizefinal = capatalizefinal == 'Gynoobs'? 'GynoObs' : capatalizefinal;\n        return capatalizefinal;\n\n    } else {\n        return null\n    }\n}","import React from 'react'\n\nconst ListCheckIcon = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className={props.className} fill='currentColor'><path d=\"M152.1 38.16C161.9 47.03 162.7 62.2 153.8 72.06L81.84 152.1C77.43 156.9 71.21 159.8 64.63 159.1C58.05 160.2 51.69 157.6 47.03 152.1L7.029 112.1C-2.343 103.6-2.343 88.4 7.029 79.03C16.4 69.66 31.6 69.66 40.97 79.03L63.08 101.1L118.2 39.94C127 30.09 142.2 29.29 152.1 38.16V38.16zM152.1 198.2C161.9 207 162.7 222.2 153.8 232.1L81.84 312.1C77.43 316.9 71.21 319.8 64.63 319.1C58.05 320.2 51.69 317.6 47.03 312.1L7.029 272.1C-2.343 263.6-2.343 248.4 7.029 239C16.4 229.7 31.6 229.7 40.97 239L63.08 261.1L118.2 199.9C127 190.1 142.2 189.3 152.1 198.2V198.2zM224 96C224 78.33 238.3 64 256 64H480C497.7 64 512 78.33 512 96C512 113.7 497.7 128 480 128H256C238.3 128 224 113.7 224 96V96zM224 256C224 238.3 238.3 224 256 224H480C497.7 224 512 238.3 512 256C512 273.7 497.7 288 480 288H256C238.3 288 224 273.7 224 256zM160 416C160 398.3 174.3 384 192 384H480C497.7 384 512 398.3 512 416C512 433.7 497.7 448 480 448H192C174.3 448 160 433.7 160 416zM0 416C0 389.5 21.49 368 48 368C74.51 368 96 389.5 96 416C96 442.5 74.51 464 48 464C21.49 464 0 442.5 0 416z\"/></svg>\n}\n\nexport default ListCheckIcon","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport LazyLoad from 'react-lazyload';\n// import firebase from \"firebase/compat/app\";\n// import 'firebase/compat/auth';\n// import 'firebase/compat/firestore';\nimport TextClamp from 'react-string-clamp';\nimport { useParams } from \"react-router-dom\";\n//LOCAL IMPORTS\n// import useLocalStorage from \"../../customHooks/useLocalStorage\";\nimport './index.scss'\nimport { AuthContext } from \"../../components/signUp/authMethods/authentication\";\nimport ImgSlider from '../../pages/SlideDetail/components/slider';\nimport useViewsCount from \"../../components/customHooks/viewsCount\";\nimport { Avatar } from \"../../components/global/images\";\nimport SlideDescription from \"../SlideDetail/components/slideDescription\";\nimport Loading from \"../../components/loading\";\n// import { DisplayTitle } from \"../../components/global/Titles\";\nimport { logEventWithParams } from \"../../functions/commonMethod\";\n// import { doc, getDoc, getFirestore } from \"firebase/firestore\";\nimport ArrowRight from \"../../components/global/icons/arrow_right\";\nimport ListCheckIcon from \"../../components/global/icons/listCheck\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nconst ViewPlaylist = () => {\n    const { user } = useContext(AuthContext);\n    const { username, levelone, leveltwo, levelthree } = useParams();\n    console.log('level check',levelone,leveltwo,levelthree)\n    const [slideDocIdList, setSlideDocIdList] = useState([]);\n    // const [usernameLocalStorage, setUsernameLocalStorage] = useLocalStorage(\"username\", null);\n    const [slideData, setSlideData] = useState();\n    const [activeSlide, setActiveSlide] = useState(0)\n    const [loading, setLoading] = useState(false);\n    const viewCount = useViewsCount(slideData ? slideData[activeSlide]?.SlideName : '')\n    // const db =getFirestore();\n    const  getFirebaseAll=()=>{\n        return Promise.all([\n            import('../../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n\n\n    //getting slides from playlist\n    const getSlidesDocId = useCallback(\n        async() => {\n            setLoading(true)\n            \n         try{\n             const {firestore:{db,getDoc,doc}}=await getFirebaseAll()\n            if (levelone && !leveltwo && !levelthree) {\n                // firebase.firestore()\n                // .collection('Web-User-Data')\n                // .doc(username)\n                // .collection('Playlist')\n                // .doc(levelone)\n                // .get()\n                logEventWithParams('web_playlist_opened',{levelone:levelone})\n                const docRef=doc(db,'Web-User-Data',username,'Playlist',levelone)\n                getDoc(docRef)\n                .then(querySnapshot => {\n                    console.log('this is level one', querySnapshot.data())\n                    setSlideDocIdList(() => querySnapshot.data()?.slideList)\n                    setLoading(false)\n                })\n            }\n            else if (levelone && leveltwo && !levelthree) {\n                // firebase.firestore()\n                // .collection('Web-User-Data')\n                // .doc(username)\n                // .collection('Playlist')\n                // .doc(levelone)\n                // .collection(leveltwo)\n                // .doc('playlist')\n                // .get()\n                logEventWithParams('web_playlist_opened',{levelone:levelone,leveltwo:leveltwo})\n                const docRef=doc(db,'Web-User-Data',username,'Playlist',levelone,leveltwo,'playlist')\n                getDoc(docRef)\n                .then(querySnapshot => {\n                    console.log('this is level two', querySnapshot.data())\n                    setSlideDocIdList(() => querySnapshot.data()?.slideList)\n                    setLoading(false)\n                })\n\n            }\n            else if (levelone && leveltwo && levelthree) {\n                // firebase.firestore()\n                // .collection('Web-User-Data')\n                // .doc(username)\n                // .collection('Playlist')\n                // .doc(levelone)\n                // .collection(leveltwo)\n                // .doc(levelthree)\n                // .get()\n                logEventWithParams('web_playlist_opened',{levelone:levelone,leveltwo:leveltwo,levelthree:levelthree})\n                console.log(\"Here\")\n                const docRef=doc(db,'Web-User-Data',username,'Playlist',levelone,leveltwo,levelthree)\n                getDoc(docRef)\n                .then(querySnapshot => {\n                    console.log('this is level three', querySnapshot.data())\n                    setSlideDocIdList(() => querySnapshot.data()?.slideList)\n                    setLoading(false)\n                })\n            }\n         }\n         catch(err){\n\n         }\n        },\n        [levelone, leveltwo, levelthree,username],\n    )\n\n    useEffect(() => {\n        let isMounted = true;\n        if (isMounted){\n            getSlidesDocId()\n        } ;\n        return () => {\n            isMounted = false;\n        }\n    }, []);\n    \n    useEffect(async() => {\n        let isMounted = true;\n        try{\n            const {firestore:{db,doc,getDoc}}=await getFirebaseAll()\n            if (slideDocIdList?.length > 0) {\n                Promise.all(\n                    slideDocIdList?.map(async (docId, index) => {\n                        setLoading(true);\n                        // return await firebase.firestore()\n                        //     .collection('AllSlidesDataLockDownVersions')\n                        //     .doc(docId)\n                        //     .get()\n                        const docRef=doc(db,'AllSlidesDataLockDownVersions',docId)\n                       return getDoc(docRef)\n                            .then((querySnapshot) => {\n                                if (querySnapshot?.exists()) {\n                                    if (slideDocIdList?.length === index) {\n                                        setLoading(false);\n                                    }\n                                    \n                                    console.log('slideDocid', querySnapshot.data());\n                                    return querySnapshot.data();\n                                }\n                            })\n                    })\n                ).then((res) => {\n                    console.log('This is final data', res)\n                    setSlideData(res)\n                    // setLoading(false)\n                })\n            }\n        }\n        catch(err){\n\n        }\n        return () => {\n            isMounted = false\n        }\n    }, [slideDocIdList])\n    return <div className=\"view-playlist-container\">\n        {\n            slideData?.length > 0 && loading ?\n            \n                <div>\n                    {\n                console.log('data',slideData)\n            }\n                    <ImgSlider\n\n                        playlistUrl={encodeURI(levelthree ? `https://medicospdf.com/viewplaylist/${username}/${levelone}/${leveltwo}/${levelthree}` :\n                        leveltwo ? `https://medicospdf.com/viewplaylist/${username}/${levelone}/${leveltwo}` :\n                            `https://medicospdf.com/viewplaylist/${username}/${levelone}`)}\n                        images={slideData[activeSlide]}\n                        user={user}\n                        viewCount={viewCount}\n                    />\n                    <section className=\"playlist-title\">\n                        <h4>Playlist</h4>\n                        <div className='title-container'>\n                            <ListCheckIcon className='icon' />\n                            <h5>{(levelone && levelone) + (leveltwo ? ' > ' + leveltwo : '') + (levelthree ? ' > ' + levelthree : '')}</h5>\n                        </div>\n                    </section>\n\n                    <div className=\"playlist-container\">\n\n                        <div className=\"playlist-slider\">\n                            {\n                                slideData?.map((data, index) => {\n                                    return <section onClick={() => setActiveSlide(index)} className={`playlist-slidecard ${activeSlide === index ? 'playlist-slidecard-active' : 'playlist-slidecard'} `}>\n                                        <aside className='card-thumbnails'>\n                                            {/* <img loading=\"lazy\" src={data?.slideImages[0]} alt='Slides thumbnail image' /> */}\n                                            <LazyLoadImage src={data?.slideImages[0]} alt='Slides thumbnail image' effect=\"blur\"/>\n                                        </aside>\n                                        <aside className='slide-descriptions'>\n                                            <h3> {data?.SlideName.split('-', 1)[0]} </h3>\n                                            <span>{data?.slideCategory}</span>\n                                            <ArrowRight className='playlist-categoryAndSubCategory-icon' />\n                                            <span> {data?.slideSubCategory} </span>\n                                            <p>{data?.slideDescription}</p>\n                                            <div className='user-descriptions'>\n                                                <Avatar size={'20px'} Image={data?.userAvatar} text={username} />\n                                                {/* <p className='user-avatar-name'>{data?.username}</p> */}\n                                                <TextClamp\n                                                text={data?.username}\n                                                lines={1}\n                                                element='p'\n                                                className='user-avatar-name'\n                                            />\n                                            </div>\n\n                                        </aside>\n                                    </section>\n                                })\n                            }\n                        </div>\n                    </div>\n                    <LazyLoad height={200} offset={50}>\n                        {/* playlist props used to disable the comment and review section  */}\n                        <SlideDescription playlist={true} data={slideData[activeSlide]} user={user} viewCount={viewCount} />\n                    </LazyLoad>\n\n                </div>\n                \n                :\n                <div className=\"loading-container\">\n                    <Loading />\n                </div>\n        }\n    </div>\n}\n\nexport default ViewPlaylist;"],"names":["docId","_useState","useState","_useState2","_slicedToArray","viewCount","setViewCount","location","useLocation","documentName","replace","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","isMounted","_yield$getFirebaseAll","_yield$getFirebaseAll2","database","ref","onValue","set","update","off","refrence","onValues","_context","prev","next","Promise","all","then","_ref","sent","concat","pathname","split","res","_res$val","val","_res$val2","views","err","console","log","onlyOnce","abrupt","t0","stop","Images","Image","type","height","width","_jsx","children","className","src","style","alt","Avatar","_ref2","size","text","DisplayTitle","title","substring","color","AvatarPlaceholder","_ref3","_jsxs","logEventWithoutParams","eventName","arguments","length","undefined","logEvent","getAnalytics","error","logEventWithParams","params","filterSlideSubcategory","subCategory","capatalizefinal","mySentence","words","i","_words$i$","_words$i","toUpperCase","substr","join","capitalize","props","xmlns","viewBox","fill","d","_slideData$activeSlid","user","useContext","AuthContext","_useParams","useParams","username","levelone","leveltwo","levelthree","slideDocIdList","setSlideDocIdList","_useState3","_useState4","slideData","setSlideData","_useState5","_useState6","activeSlide","setActiveSlide","_useState7","_useState8","loading","setLoading","useViewsCount","SlideName","getFirebaseAll","firestore","getSlidesDocId","useCallback","db","getDoc","doc","docRef","_docRef","_docRef2","querySnapshot","data","_querySnapshot$data2","slideList","_querySnapshot$data3","_querySnapshot$data","_callee3","_yield$getFirebaseAll3","_yield$getFirebaseAll4","_context3","map","_ref5","_callee2","index","_context2","exists","_x","_x2","apply","ImgSlider","playlistUrl","encodeURI","images","ListCheckIcon","onClick","LazyLoadImage","slideImages","effect","slideCategory","ArrowRight","slideSubCategory","slideDescription","userAvatar","TextClamp","lines","element","LazyLoad","offset","SlideDescription","playlist","Loading"],"sourceRoot":""}