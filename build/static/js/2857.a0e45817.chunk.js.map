{"version":3,"file":"static/js/2857.a0e45817.chunk.js","mappings":"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","sources":["components/global/icons/star_fill.js","functions/checkImageValidity.js","pages/Book/components/bookStackCard/index.js","pages/Book/components/bookStackCardPlaceholder/index.js","pages/Profile/components/LikedSlidesAndBooks/index.js"],"sourcesContent":["import React from 'react'\n\nconst StarFill = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" className={props.className}viewBox=\"0 0 20 20\" fill=\"currentColor\">\n  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n</svg>\n}\n\nexport default StarFill","const  checkIfImageExists=(url, callback) =>{\n    const img = new Image();\n\n    img.src = url;\n\n    if (img.complete) {\n      callback(true);\n    } else {\n      img.onload = () => {\n        callback(true);\n      };\n      \n      img.onerror = () => {\n        callback(false);\n      };\n    }\n  }\n  export default checkIfImageExists","import React, { useState } from 'react';\nimport loaderImage from '../../../../assets/images/book/loaderpdf.webp';\nimport checkIfImageExists from '../../../../functions/checkImageValidity';\nimport { logEventWithParams } from '../../../../functions/commonMethod';\nimport './_bookStackCard.scss';\nimport StarFill from '../../../../components/global/icons/star_fill';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n\nconst BookStackCard = ({ data = null, bookImage, title, authorInfo, rating, views }) => {\n\n    const [state,setState]=useState(false)\n\n    const clickhandlertodo = () => {\n        logEventWithParams(\"web_book_opened\", { book_title: title, book_subcategory: data && data?.subject })\n    }\n    \n    useState(()=>{\n        let isMounted=true\n        if(isMounted){\n            checkIfImageExists(bookImage, (exists) => {\n                if (exists) {\n                   setState(!state)\n                } else {\n                }\n              });\n\n        }\n          return () => {\n            isMounted=false\n        }\n      },[])\n\n    return (\n        <div\n            // TODO\n            onClick={clickhandlertodo}\n            className=\"bookStackCard-wrapper\">\n            <div className=\"bookStackCard-wrapper-infoCard\">\n                <h6 className=\"bookStackCard-wrapper-infoCard-heading\">{title}</h6>\n                <p className=\"bookStackCard-wrapper-infoCard-p\">by {authorInfo} (author)</p>\n                <div className=\"bookStackCard-wrapper-infoCard-bottom\">\n                    <div className=\"bookStackCard-wrapper-infoCard-bottom-col1\">\n                        <StarFill className=\"bookStackCard-wrapper-infoCard-bottom-col1-icon\" />\n                        <h6 className=\"bookStackCard-wrapper-infoCard-bottom-col1-heading\">{rating}</h6>\n                    </div>\n                    <p className=\"bookStackCard-wrapper-infoCard-bottom-p\"></p>\n                </div>\n            </div>\n            <div className=\"bookStackCard-wrapper-bookCoverCard\">\n                {/* <img \n                src={`${state?`${bookImage}`:`${loaderImage}`}`}\n                alt={`${state?`${title}`:'MedicosPdf default book image'}`}\n                /> */}\n                <LazyLoadImage  src={`${state?`${bookImage}`:`${loaderImage}`}`}\n                alt={`${state?`${title}`:'MedicosPdf default book image'}`} effect='blur'/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default BookStackCard\n","import React from 'react'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { CSSTransition} from 'react-transition-group';\nimport loaderImage from '../../../../assets/images/book/loaderpdf.webp';\nimport './_bookstackCardPlaceholder.scss';\n\nexport const BookStackCardPlaceholderPlaceholder = () => {\n    return (\n        <div className='bookStackCardPlaceholder-wrapper'>\n            \n            <div className=\"bookStackCardPlaceholder-wrapper-infoCard\">\n            <CSSTransition\n             classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}\n            >\n            <p className=\"bookStackCardPlaceholder-wrapper-infoCard-heading\"></p>\n\n            </CSSTransition>\n            <CSSTransition\n             classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}\n            >\n                <p className=\"bookStackCardPlaceholder-wrapper-infoCard-heading\"></p>\n                </CSSTransition>\n                <CSSTransition\n             classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}\n            >\n                <p className=\"bookStackCardPlaceholder-wrapper-infoCard-p\"> </p>\n                </CSSTransition>\n                <div className=\"bookStackCardPlaceholder-wrapper-infoCard-bottom\">\n                <CSSTransition\n             classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}\n            >\n                    <div className=\"bookStackCardPlaceholder-wrapper-infoCard-bottom-col1\">\n                    </div>\n                    </CSSTransition>\n                    <CSSTransition\n             classNames=\"placeholder\"\n            in={true}\n            appear={true}\n            timeout={3000}\n            >\n                    <p className=\"bookStackCardPlaceholder-wrapper-infoCard-bottom-p\"></p>\n                    </CSSTransition>\n                </div>\n        </div>\n            \n       \n            <div className=\"bookStackCardPlaceholder-wrapper-bookCoverCard\">\n               {/* <img src={loaderImage} alt=\"coverimage\"/> */}\n               <LazyLoadImage src={loaderImage} alt=\"coverimage\"/>\n            </div>\n            \n        </div>\n    )\n}\n","// import firebase from 'firebase/compat';\n// import { collection, getDocs, getFirestore, limit, orderBy, query, startAfter } from 'firebase/firestore';\nimport { async } from '@firebase/util';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../../../../components/global/button';\nimport { Headings } from '../../../../components/global/headings';\n// import { DisplayTitle } from '../../../../components/global/Titles';\nimport Loading from '../../../../components/loading';\nimport BookStackCard from '../../../Book/components/bookStackCard';\nimport { BookStackCardPlaceholderPlaceholder } from '../../../Book/components/bookStackCardPlaceholder';\n// import BookTrending from '../../../Book/components/bookTrending';\nimport ButtonWithArrow from '../../../Home/components/buttonWithArrow';\nimport { SlideCardPlaceholder } from '../../../Slide/component/slideCardPlaceholder';\nimport SlideTrendingProfile from '../slideTrendingProfile';\nimport './index.scss';\n\nconst LikedSlidesAndBooks = ({ user }) => {\n    const [likedSlides, setLikedSlides] = useState([]);\n    const [likedBooks, setLikedBooks] = useState([]);\n    const [bookFound, setBookFound] = useState(true);\n    const [slideFound, setSlideFound] = useState(true);\n    const { userId } = useParams();\n    // const [slideLimit, setSlideLimit] = useState(10);\n    const slideLimit=10;\n    const [lastSlide, setLastSlide] = useState();\n    const [lastBook, setLastBook] = useState();\n    const [showLoadMoreSlides, setShowLoadMoreSlides] = useState(false);\n    const [showMoreSlidesLoading, setShowMoreSlidesLoading] = useState(false);\n    const [showLoadMoreBooks, setShowLoadMoreBooks] = useState(false);\n    const [showMoreBooksLoading, setShowMoreBooksLoading] = useState(false);\n    const [loading, setLoading] = useState(true);\n    // const db =getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../../../../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return {firestore}\n        })\n    };\n    useEffect(async() => {\n        let isMounted = true;\n        try {\n            const {firestore:{db,query,collection,orderBy,limit,getDocs}}=await getFirebaseAll()\n            // firebase.firestore().collection('Web-User-Data')\n            //     .doc(userId)\n            //     .collection('LikedSlides')\n            //     .orderBy('SlideName')\n            //     .limit(slideLimit)\n            //     .get()\n               if(userId){\n                const colRef1=query(collection(db,'Web-User-Data',userId,'LikedSlides'),\n                orderBy('SlideName'),\n                limit(slideLimit))\n                getDocs(colRef1)\n                .then((querySnapshot) => {\n                    if (querySnapshot && isMounted) {\n                        let likedSlideData = []\n                        querySnapshot.forEach((doc) => {\n                            likedSlideData.push(doc.data())\n                        })\n                        // console.log(\"user liked books\",likedSlideData);\n                        if (likedSlideData.length === 0) {\n                            setSlideFound(false)\n                           \n                        }\n                        else{\n                            setShowLoadMoreSlides(true)\n                        }\n                        setLoading(false);\n                        setShowMoreSlidesLoading(false);\n                        setLastSlide(likedSlideData[likedSlideData?.length - 1])\n                        setLikedSlides(likedSlideData)\n                    }\n                })\n               }\n            // firebase.firestore().collection('Web-User-Data')\n            //     .doc(userId)\n            //     .collection('LikedBooks')\n            //       .orderBy('title')\n            //     .limit(slideLimit)\n            //     .get()\n                const colRef2=query(collection(db,'Web-User-Data',userId,'LikedBooks'),\n                orderBy('title'),\n                limit(slideLimit))\n                getDocs(colRef2)\n                .then((querySnapshot) => {\n                    if (querySnapshot && isMounted) {\n                        let likedBookData = []\n                        querySnapshot.forEach((doc) => {\n                            likedBookData.push(doc.data())\n                        })\n                        // console.log(\"user liked books\",likedBookData);\n                        if (likedBookData.length === 0) {\n                            setBookFound(false)\n                        }\n                        else{\n                            setShowLoadMoreBooks(true)\n                        }\n                        setLoading(false);\n                        setShowMoreBooksLoading(false);\n                        setLastBook(likedBookData[likedBookData?.length - 1])\n                        setLikedBooks(likedBookData)\n                    }\n                })\n        } catch (error) {\n            console.log('Error fetching liked books and slides', error);\n        }\n        return () => {\n            isMounted = false\n        }\n    }, [userId])\n\n    const loadMoreSlides = async() => {\n        try {\n            const {firestore:{db,query,collection,orderBy,startAfter,limit,getDocs}}=await getFirebaseAll()\n            setShowMoreSlidesLoading(true);\n            // firebase.firestore()\n            //     .collection('Web-User-Data')\n            //     .doc(userId)\n            //     .collection('LikedSlides')\n            //     .orderBy('SlideName')\n            //     .startAfter(lastSlide?.SlideName)\n            //     .limit(slideLimit)\n            //     .get()\n                const colRef=query(collection(db,'Web-User-Data',userId,'LikedSlides'),\n                orderBy('SlideName'),\n                startAfter(lastSlide?.SlideName),\n                limit(slideLimit))\n                getDocs(colRef)\n                .then(querySnapshot => {\n                    let allData = []\n                    querySnapshot.forEach(ele => {\n                        // console.log(\"This is data\", ele.data())\n                        allData.push(ele.data());\n\n                    })\n                    setLastSlide(allData[allData?.length - 1])\n                    if (allData?.length === 0) {\n                        setShowLoadMoreSlides(false)\n                    }\n                    setShowMoreSlidesLoading(false);\n                    setLikedSlides((init) => [...init, ...allData])\n\n                })\n        } catch (error) {\n            console.log('Error fetching more user uploaded slides', error)\n        }\n    }\n      \n    const loadMoreBooks = async() => {\n        try {\n            const{firestore:{db,query,collection,startAfter,limit,getDocs,orderBy}}=await getFirebaseAll()\n            setShowMoreBooksLoading(true);\n            // firebase.firestore()\n            //     .collection('Web-User-Data')\n            //     .doc(userId)\n            //     .collection('LikedBooks')\n            //     .orderBy('title')\n            //     .startAfter(lastBook?.title)\n            //     .limit(slideLimit)\n            //     .get()\n                const colRef=query(collection(db,'Web-User-Data',userId,'LikedBooks'),\n                orderBy('title'),\n                startAfter(lastBook?.title),\n                limit(slideLimit))\n                getDocs(colRef)\n                .then(querySnapshot => {\n                    let allData = []\n                    querySnapshot.forEach(ele => {\n                        allData.push(ele.data());\n\n                    })\n                    setLastBook(allData[allData?.length - 1])\n                    if (allData?.length === 0) {\n                        setShowLoadMoreBooks(false)\n                    }\n                    setShowMoreBooksLoading(false);\n                    setLikedBooks((init) => [...init, ...allData])\n\n                })\n        } catch (error) {\n            console.log('Error fetching more user uploaded slides', error)\n        }\n    }\n\n    return (\n        <div className='liked-slides-and-books-container'>\n            <div className='liked-slides-container'>\n                {\n                    likedSlides ?\n                        <div>\n                        <Headings type=\"heading5\" content=\"Liked Slides\" />\n                            {/* <SlideTrending showTitle={false} details={likedSlides} /> */}\n                            <SlideTrendingProfile showTitle={false} details={likedSlides} from='likeSlidesAndBooks'/>\n                        </div>\n                        :\n                        <div>\n                            {\n                                slideFound ?\n                                    <div className='liked-slides-container'>\n                                        <SlideCardPlaceholder/>\n                                    </div>\n                                    :\n                                    <h1>No liked slides found</h1>\n                            }\n                        </div>\n                }\n\n                {\n                    showLoadMoreSlides && likedSlides?.length>9 && slideFound &&\n                    <div className='likedBookAndSlides-load-more-container' onClick={loadMoreSlides}>\n                         {\n                            showMoreSlidesLoading &&\n                            <Loading />\n                        }\n                        <Button type=\"primary-outline-rounded\" label=\"Load More\" labelColor=\"black\" />\n                       \n                    </div>\n                }\n            </div>\n\n            <div className='liked-books-container'>\n                {\n                    likedBooks ?\n                        <div>\n                        <Headings type=\"heading5\" content=\"Liked Books\" />\n                            {/* <BookTrending profile={true} showTitle={false} details={likedBooks} /> */}\n                           {\n                               likedBooks &&\n                               <div className=\"profileLikedBooks-container\">\n                               {\n                                   \n                                   likedBooks?.map((data,index)=>{\n                                       return<div key={index + data?.title} className=\"profileLikedBooks-container-wrapper\">\n                                           <Link\n                                                className='links'\n                                                to={{\n                                                    pathname: `/bookdetails/${data?.title}`,\n                                                    state: {\n                                                    data: JSON.stringify(data),\n                                                    wholeData: JSON.stringify(likedBooks),\n                                                    }\n                                                }}>\n                                                    <BookStackCard\n                                                        data={data}\n                                                        bookImage={data?.image}\n                                                        title={data?.title}\n                                                        authorInfo={data?.writer}\n                                                        rating={data?.rating}\n                                                        views={\"100 Views\"}\n                                                    />\n                                             </Link>\n                                       </div>\n                                   })\n                               }\n                             </div>\n                           }\n                        </div>\n                        :\n                        <div>\n                            {\n                                bookFound ?\n                                    <div className='profileLikedBooks-container-wrapper'>\n                                        <BookStackCardPlaceholderPlaceholder/>\n                                    </div>\n                                    :\n                                    <h1>No liked slides found</h1>\n                            }\n                        </div>\n                }\n                {\n                    !bookFound && \n                    <div>\n                          <p className=\"profileLikedBooks-infoPara\">No liked books.</p>\n                          <ButtonWithArrow name=\"Explore Books\" link='/book'/>\n                     </div>   \n                  \n                }\n                  {\n                    showLoadMoreBooks && likedBooks?.length>9 && bookFound &&\n                    <div className='likedBookAndSlides-load-more-container' onClick={loadMoreBooks}>\n                         {\n                            showMoreBooksLoading &&\n                            <Loading />\n                        }\n                        <Button type=\"primary-outline-rounded\" label=\"Load More\" labelColor=\"black\" />\n                       \n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(LikedSlidesAndBooks);"],"names":["props","_jsx","xmlns","className","viewBox","fill","children","d","url","callback","img","Image","src","complete","onload","onerror","_ref","_ref$data","data","bookImage","title","authorInfo","rating","_useState","views","useState","_useState2","_slicedToArray","state","setState","isMounted","checkIfImageExists","exists","_jsxs","onClick","logEventWithParams","book_title","book_subcategory","subject","StarFill","LazyLoadImage","concat","loaderImage","alt","effect","BookStackCardPlaceholderPlaceholder","CSSTransition","classNames","in","appear","timeout","LikedSlidesAndBooks","user","likedSlides","setLikedSlides","_useState3","_useState4","likedBooks","setLikedBooks","_useState5","_useState6","bookFound","setBookFound","_useState7","_useState8","slideFound","setSlideFound","userId","useParams","_useState9","_useState10","lastSlide","setLastSlide","_useState11","_useState12","lastBook","setLastBook","_useState13","_useState14","showLoadMoreSlides","setShowLoadMoreSlides","_useState15","_useState16","showMoreSlidesLoading","setShowMoreSlidesLoading","_useState17","_useState18","showLoadMoreBooks","setShowLoadMoreBooks","_useState19","_useState20","showMoreBooksLoading","setShowMoreBooksLoading","_useState21","_useState22","setLoading","getFirebaseAll","Promise","all","then","_ref2","firestore","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getFirebaseAll","_yield$getFirebaseAll2","db","query","collection","orderBy","limit","getDocs","colRef1","colRef2","_context","prev","next","sent","querySnapshot","likedSlideData","forEach","doc","push","length","likedBookData","t0","console","log","abrupt","stop","loadMoreSlides","_ref5","_callee2","_yield$getFirebaseAll3","_yield$getFirebaseAll4","startAfter","colRef","_context2","SlideName","allData","ele","init","_toConsumableArray","apply","arguments","loadMoreBooks","_ref6","_callee3","_yield$getFirebaseAll5","_yield$getFirebaseAll6","_context3","Headings","type","content","SlideTrendingProfile","showTitle","details","from","SlideCardPlaceholder","Loading","Button","label","labelColor","map","index","Link","to","pathname","JSON","stringify","wholeData","BookStackCard","image","writer","ButtonWithArrow","name","link","React"],"sourceRoot":""}