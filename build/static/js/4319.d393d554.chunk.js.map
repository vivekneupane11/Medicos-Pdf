{"version":3,"file":"static/js/4319.d393d554.chunk.js","mappings":"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","sources":["pages/Profile/components/ClipboardPlaceholder/index.js","components/global/imagesModal/index.js","pages/Profile/components/Clipboard/index.js"],"sourcesContent":["import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport './_clipboardPlaceholder.scss';\n\nexport const ClipboardPlaceholder = () => {\n    return (\n        <div className='clipboardPlaceholder-wrapper'>\n        <CSSTransition\n        classNames=\"placeholder\"\n        timeout={3000}\n        in={true}\n        appear={true}\n        >\n            <div className='image'>\n            </div>\n            </CSSTransition>\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport CloseCircle from '../icons/xMark_Circle'\nimport { Avatar } from '../images'\nimport image from '../../../assets/images/book/loaderpdf.webp'\nimport './_imagesModal.scss';\nimport { CSSTransition } from 'react-transition-group'\nimport { LazyLoadImage } from 'react-lazy-load-image-component'\n\nconst ImagesModal = ({data,closeModal,modalIsOpen}) => {\n    const handelclose=() => closeModal()\n  return <div className='imagemodal-wrapper'>\n      {\n          modalIsOpen &&\n          (  <CSSTransition\n            classNames=\"tipsTransition\"\n            in={modalIsOpen}\n            appear={modalIsOpen}\n            onExited={closeModal}\n            unmountOnExit\n            timeout={200}>\n          <div className='imagemodal-wrapper-container' >\n          <div className='imagemodal-wrapper-container-image'>\n              <LazyLoadImage className=\"modal-image\" src={data?.image? data?.image:image} alt={\"img\"} effect='blur' />\n          {/* <img className=\"modal-image\" src={data?.image? data?.image:image} alt=\"img\" /> */}\n              <div className='close' onClick={handelclose}>\n              <CloseCircle className=\"icon\"  />\n              </div>\n          </div>\n          <div className='imagemodal-wrapper-container-userdetails'>\n          <Link\n                to={`/profile/${data?.author}`}\n                className=\"user-info\">\n                    <Avatar\n                        Image={data?.userAvatar}\n                        text={data?.username ? data?.username : 'medicos.int7'}\n                        size='35px'\n                    />\n                    <h6>{data?.username ? data?.username : 'medicos.int7'}</h6>\n                </Link>\n          </div>\n      </div>\n          </CSSTransition>)\n      }\n      \n\n  </div>\n}\n\nexport default ImagesModal","import React, { useContext, useEffect, useState } from \"react\";\n// import firebase from \"firebase/compat/app\";\n// import 'firebase/compat/auth';\n// import 'firebase/compat/firestore';\n// import { AiOutlineDelete } from \"react-icons/ai\";\nimport { toast } from \"react-toastify\";\n\nimport './index.scss';\nimport { Avatar } from \"../../../../components/global/images\";\nimport { Link, useParams } from \"react-router-dom\";\n// import Loading from \"../../../../components/loading\";\nimport { Button } from \"../../../../components/global/button\";\nimport { ClipboardPlaceholder } from \"../ClipboardPlaceholder\";\n// import { collection, deleteDoc, doc,  getDocs, getFirestore, limit, onSnapshot, orderBy, query, startAfter, where } from \"firebase/firestore\";\nimport { AuthContext } from \"../../../../components/signUp/authMethods/authentication\";\n\nimport Delete from \"../../../../components/global/icons/delete\";\nimport ImagesModal from \"../../../../components/global/imagesModal\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nconst Clipboard = () => {\n    const { userId } = useParams();\n    const { user ,username:usernameauth} = useContext(AuthContext);\n\n    const [clippedSlideImages, setClippedSlideImages] = useState();\n    const [loading, setLoading] = useState(false);\n    const [showLoadMore, setShowLoadMore] = useState(false);\n    let loadLimit = 6;\n    // const db = getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../../../../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return {firestore}\n        })\n    }\n\n\n   async function deleteClippedSlideImage(image, createdAt) {\n        try {\n            const {firestore:{db,query,collection,where,onSnapshot,deleteDoc,doc}}=await getFirebaseAll();\n            // firebase.firestore()\n            //     .collection('Web-User-Data')\n            //     .doc(usernameauth)\n            //     .collection('Clipped-Slide-Images')\n            //     .where('image', '==', image)\n            //     .where('createdAt', '==', createdAt)\n            //     .get()\n                const colRef =query(collection(db,'Web-User-Data',usernameauth,'Clipped-Slide-Images'),\n                where('image', '==', image),\n                where('createdAt', '==', createdAt))\n                // getDocs(colRef)\n                onSnapshot(colRef,(querySnapshot) => {\n                    if (!querySnapshot.empty) {\n                        // firebase.firestore()\n                        //     .collection('Web-User-Data')\n                        //     .doc(usernameauth)\n                        //     .collection('Clipped-Slide-Images')\n                        //     .doc(querySnapshot?.docs[0]?.id)\n                        //     .delete()\n                            deleteDoc(doc(db,'Web-User-Data',usernameauth,'Clipped-Slide-Images',querySnapshot?.docs[0]?.id))\n                            .then(() => {\n                                toast.success('Clipped Slide Images deleted successfully.', { theme: 'dark', hideProgressBar: true })\n                            })\n                    }\n                })\n\n        } catch (error) {\n            console.log('Error deleting clipped slide image', error)\n        }\n    }\n\n\n    const ImageContainer = ({ data,index }) => {\n        const [modalIsOpen, setModalIsOpen] = useState(false);\n        function openModal() {\n            setModalIsOpen(true);\n        }\n        function closeModal() {\n            setModalIsOpen(false);\n        }\n        const handelmodalopen=() => setModalIsOpen(true)\n        // console.log('This is image', data?.userAvatar)\n        return <div className=\"clipped-image-container\" key={index}>\n            {/* <img loading=\"lazy\" onClick={() => setModalIsOpen(true)} className=\"image\" src={data?.image} alt=\"image\"/> */}\n            <LazyLoadImage onClick={handelmodalopen} className=\"image\" src={data?.image} alt=\"image\"/>\n            <ImagesModal\n                data={data}\n                modalIsOpen={modalIsOpen}\n                closeModal={closeModal}\n                openModal={openModal}\n            />\n            <div className=\"bottom-container\">\n                <Link\n                    to={`/profile/${data?.author ? data?.author : 'medicos.int7'}`}\n                    className=\"userInfo\">\n                    <Avatar\n                        size={\"35px\"}\n                        Image={data?.userAvatar}\n                        text={data?.author}\n                    />\n                    <p>{data?.author}</p>\n                </Link>\n                {\n                    usernameauth === data?.createdBy && <div onClick={() => deleteClippedSlideImage(data?.image, data?.createdAt)}>\n\n                        <Delete  className=\"icon\" />\n                    </div>\n                }\n            </div>\n        </div>\n    }\n    useEffect(async() => {\n        let isMounted = true;\n        try {\n            const {firestore:{db,query,collection,orderBy,limit,onSnapshot}}=await getFirebaseAll()\n            setLoading(true);\n            // firebase.firestore()\n            //     .collection('Web-User-Data')\n            //     .doc(userId)\n            //     .collection('Clipped-Slide-Images')\n            //     .orderBy('createdAt', 'desc')\n            //     .limit(loadLimit)\n                const colRef =query(collection(db,'Web-User-Data',userId,'Clipped-Slide-Images'),\n                orderBy('createdAt', 'desc'),\n                limit(loadLimit))\n                onSnapshot(colRef,(querySnapshot) => {\n                    if (!querySnapshot.empty) {\n                        let clippedSlideImagesData = [];\n                        querySnapshot.forEach((doc) => {\n                            clippedSlideImagesData.push(doc.data())\n                        })\n                        setClippedSlideImages(clippedSlideImagesData);\n                        if (querySnapshot?.docs?.length === loadLimit) {\n                            setShowLoadMore(true)\n                        } else {\n                            setShowLoadMore(false)\n                        }\n                        setLoading(false);\n                    } else {\n                        setLoading(false)\n                    }\n                })\n        } catch (error) {\n            console.log('Error fetching clipped slide images', error)\n        }\n        return () => {\n            isMounted = false\n        }\n    }, [loadLimit,userId])\n\n    const loadMore = async() => {\n        // firebase.firestore()\n            // .collection('Web-User-Data')\n            // .doc(userId)\n            // .collection('Clipped-Slide-Images')\n            // .orderBy('createdAt',\"desc\")\n            // .startAfter(clippedSlideImages[clippedSlideImages?.length - 1]?.createdAt)\n            // .limit(loadLimit)\n            // .get()\n            const {firestore:{db,query,collection,orderBy,startAfter,limit,getDocs}}=await getFirebaseAll()\n            const colRef = query(collection(db,'Web-User-Data',userId,'Clipped-Slide-Images'),\n            orderBy('createdAt',\"desc\"),\n            startAfter(clippedSlideImages[clippedSlideImages?.length - 1]?.createdAt),\n            limit(loadLimit))\n            getDocs(colRef)\n            .then((querySnapshot) => {\n                console.log('THIS IS MORE LOADED DATA', querySnapshot.docs)\n                if (!querySnapshot.empty) {\n                    let clippedSlideImagesMoreData = []\n                    querySnapshot.forEach((doc) => {\n                        clippedSlideImagesMoreData.push(doc.data())\n                    })\n                    setClippedSlideImages((init) => [...init, ...clippedSlideImagesMoreData]);\n                    setShowLoadMore(true);\n                } else {\n                    setShowLoadMore(false);\n                }\n            })\n    }\n\n\n    return <div className=\"clipboard-page-container\">\n        {\n            loading ?\n               <div className=\"clipped-image-list\">\n               <ClipboardPlaceholder/>\n\n               </div>\n                :\n                <>\n                    {\n                        clippedSlideImages?.length ?\n                            <div className=\"clipped-image-list\">\n                                {\n                                    clippedSlideImages?.map((clippedImage,index) => {\n                                        return <ImageContainer\n                                            data={clippedImage}\n                                            key={index}\n                                        />\n                                    })\n                                }\n                            </div>\n                            :\n                            <div className=\"text-container\">\n                                <h3>No clipped slide images.</h3>\n                            </div>\n                    }\n                </>\n        }\n        {\n            showLoadMore && <div className='button-container'>\n                <div onClick={loadMore}>\n                    <Button type=\"primary-outline-rounded\" label=\"Load More\" labelColor=\"black\" />\n                </div>\n            </div>\n        }\n    </div>\n}\n\nexport default Clipboard;"],"names":["ClipboardPlaceholder","_jsx","className","children","CSSTransition","classNames","timeout","in","appear","_ref","data","closeModal","modalIsOpen","onExited","unmountOnExit","_jsxs","LazyLoadImage","src","image","alt","effect","onClick","CloseCircle","Link","to","concat","author","Avatar","Image","userAvatar","text","username","size","userId","useParams","_useContext","useContext","AuthContext","usernameauth","user","_useState","useState","_useState2","_slicedToArray","clippedSlideImages","setClippedSlideImages","_useState3","_useState4","loading","setLoading","_useState5","_useState6","showLoadMore","setShowLoadMore","getFirebaseAll","Promise","all","then","firestore","_deleteClippedSlideImage","_asyncToGenerator","_regeneratorRuntime","_callee3","createdAt","_yield$getFirebaseAll5","_yield$getFirebaseAll6","db","query","collection","where","onSnapshot","deleteDoc","doc","colRef","_context3","prev","next","sent","querySnapshot","_querySnapshot$docs$","empty","docs","id","toast","theme","hideProgressBar","t0","console","log","stop","apply","arguments","ImageContainer","_ref3","index","_useState7","_useState8","setModalIsOpen","ImagesModal","openModal","createdBy","_x","_x2","deleteClippedSlideImage","Delete","useEffect","_callee","_yield$getFirebaseAll","_yield$getFirebaseAll2","orderBy","limit","_context","_querySnapshot$docs","clippedSlideImagesData","forEach","push","length","abrupt","loadMore","_ref5","_callee2","_clippedSlideImages","_yield$getFirebaseAll3","_yield$getFirebaseAll4","startAfter","getDocs","_context2","clippedSlideImagesMoreData","init","_toConsumableArray","_Fragment","map","clippedImage","Button","type","label","labelColor"],"sourceRoot":""}