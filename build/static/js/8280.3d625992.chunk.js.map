{"version":3,"file":"static/js/8280.3d625992.chunk.js","mappings":"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","sources":["components/global/icons/SocialIcon/google.js","components/global/loginModel/index.js","components/signUp/authMethods/auth.js"],"sourcesContent":["import React from 'react'\n\nconst GoogleIcon = (props) => {\n  return <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 488 512\" className={props.className} fill='currentColor' ><path d=\"M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z\"/></svg>\n}\n\nexport default GoogleIcon","\nimport React, { useContext, useEffect, useState } from 'react';\nimport { ErrorMessage, Field, Formik } from 'formik';\n\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\nimport useLocalStorage from '../../../customHooks/useLocalStorage';\nimport { newTab } from '../../../functions/newTabMethod';\nimport SocialMediaAuth from '../../signUp/authMethods/auth';\nimport { AuthContext } from '../../signUp/authMethods/authentication';\nimport { facebookProvider, googleProvider } from '../../signUp/authMethods/authMethods';\nimport \"./_loginmodel.scss\";\n// import { doc, getFirestore, onSnapshot } from 'firebase/firestore';\nimport ArrowLeft from '../icons/arrow_left';\nimport Close from '../icons/xMark';\nimport ExclamanationTriangle from '../icons/exclamanation_Triangle';\nimport FacebookIcon from '../icons/SocialIcon/facebook';\nimport GoogleIcon from '../icons/SocialIcon/google';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n\n\n\n\n\nexport const LoginModal = ({ show, formModel }) => {\n    let history = useHistory()\n    const { forgetPassword, register, login, user } = useContext(AuthContext);\n    const [toggle, setToggle] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [preference, setPreference] = useLocalStorage(\"preference\", null);\n    const [usernameLocalStorage, setUsernameLocalStorage] = useLocalStorage(\"username\", null);\n\n\n    const [showPopUpForm, setShowPopUpForm] = useState(show)\n\n    const [showSignIn, setShowSignIn] = useState(false)\n    const [showForm, setShowForm] = useState(false)\n    const [showSignInWithEmailForm, setShowSignInWithEmailForm] = useState(false);\n    const [showPasswordResetForm, setShowPasswordResetForm] = useState(false)\n    const [usernameError, setUsernameError] = useState();\n    // const db = getFirestore();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../../../firebase/firestore')\n        ])\n        .then(([firestore])=>{\n            return{firestore}\n        })\n    }\n\n    const handleOnCLick = async (provider) => {\n       try {\n           const{firestore:{doc,onSnapshot,db}}=await getFirebaseAll()\n        await SocialMediaAuth(provider).then((res) => {\n            console.log('CHECKING USER ID', res?.uid, usernameLocalStorage);\n            if (res?.uid) {\n               \n                    const docRef =doc(db,'Web-Uid-To-Username',res?.uid)\n\n                    onSnapshot(docRef,(querySnapshot) => {\n               \n                        if (!querySnapshot.exists()) {\n                            history.push('/register')\n                        } else {\n                            setUsernameLocalStorage(querySnapshot?.data()?.username)\n                        }\n                    })\n            }\n        \n        })\n       } catch (error) {\n           \n       }\n    }\n    const renderError = (message) => <p className=\"login-error-msg\">{message}</p>;\n    const loginSubmit = async ({ values, setSubmitting, resetForm }) => {\n        await login(values.email, values.password).then((res) => {\n            // checkUserPreference()\n        })\n\n        setSubmitting(false)\n        resetForm();\n    }\n\n\n\n    const signUpSubmit = async({ values, setSubmitting, resetForm }) => {\n        try {\n           const{firestore:{doc,onSnapshot,db}}=await getFirebaseAll()\n            \n           alert(values.username)\n          \n               const docRef = doc(db,'Web-User-Data',values.username,'Additional-Details',values.username)\n               onSnapshot(docRef,(querySnapshot) => {\n                   if (querySnapshot.exists()) {\n                       setUsernameError('Username already existed')\n                       setSubmitting(false)\n                   } else {\n                       setUsernameError(null)\n                       register({ email: values.email, username: values.username, password: values.password })\n                       setSubmitting(false)\n                       resetForm();\n                   }\n               })\n            \n        } catch (error) {\n            \n        }\n\n    }\n    const forgetPasswordSubmit = ({ values, setSubmitting, resetForm }) => {\n        forgetPassword(values.email)\n        setSubmitting(false)\n        resetForm();\n    }\n    useEffect(() => {\n        let isMounted = true;\n        if (isMounted) {\n            if (!preference?.preference) {\n                setShowModal(true);\n            }\n        }\n        return (() => {\n            isMounted = false\n        })\n    }, [user?.uid])\n\n\n    const clickhandlerform = () => formModel(false)\n    const clickhandlersetshowform = () => { setShowForm(!showForm); setShowPasswordResetForm(false) }\n    const clickhandlertab1 = () => newTab('https://policies.google.com/privacy?hl=en-US', 'google privacy', 'google_privacy_clicked')\n    const clickhandlertab2 = () => newTab('https://policies.google.com/terms?hl=en-US', 'google terms', 'google_terms_clicked')\n    const clickhandlertab3 = () => newTab('https://policies.google.com/privacy?hl=en-US', 'google privacy', 'google_privacy_clicked')\n    const clickhandlertab4 = () => newTab('https://policies.google.com/terms?hl=en-US', 'google terms', 'google_terms_clicked')\n    const clickhandlertab5 = () => newTab('https://policies.google.com/privacy?hl=en-US', 'google privacy', 'google_privacy_clicked')\n    const clickhandlertab6 = () => newTab('https://policies.google.com/terms?hl=en-US', 'google terms', 'google_terms_clicked')\n    const clickhandlersetshowpassword = () => setShowPasswordResetForm(true)\n    const clickhandlerfbprovider = () => { handleOnCLick(facebookProvider) }\n    const clickhandlergoogleprovider = () => { handleOnCLick(googleProvider) }\n    const clickhandlersignin = () => { setShowSignInWithEmailForm(true); setShowForm(true) }\n    const clickhandlersignshow = () => { setShowSignInWithEmailForm(false); setShowForm(true) }\n    const clickhandlersigninshow = () => { setShowSignIn(!showSignIn); setShowForm(false) }\n    const clickhandlersetshowreset = () => { setShowSignIn(!showSignIn); setShowForm(false); setShowPasswordResetForm(false) }\n    const formmodalfalse=() => formModel(false)\n\n   \n    return (\n        <>\n            {\n                show &&\n                <div className={`${show ? 'loginModal-wrapper' : 'loginModal-wrapper-hide'}`}>\n                    <div className=\"loginModal-wrapper-container\">\n\n\n                        <div className=\"loginModal-wrapper-container-left\">\n                            <div className=\"loginModal-wrapper-container-left-top\">\n                                <div className=\"loginModal-wrapper-container-left-top-logo\">\n                                    {/* <img src={require('../../../assets/images/medicospdf_logo.webp').default} alt='img'  className='logo' /> */}\n                                    <LazyLoadImage src={require('../../../assets/images/medicospdf_logo.webp').default} alt={'img'}  className='logo' effect='blur'/> \n\n                                </div>\n                                <div className='loginModal-wrapper-container-left-top-heading'>\n                                    <p style={{ display: showSignIn ? 'none' : 'block' }}>Welcome !!!</p>\n                                </div>\n\n\n                            </div>\n                            <div className=\"loginModal-wrapper-container-left-bottom\">\n                                <div className=\"loginModal-wrapper-container-left-bottom-userImage\">\n     \n\n\n                                </div>\n                                <div className=\"loginModal-wrapper-container-left-bottom-userLogin\">\n                                    <div className=\"loginModal-wrapper-container-left-bottom-userLogin-number\">\n                                        <h4 className=\"count\">5,00,000 <span>people</span></h4>\n                                        <p>are using MedicosPdf right now</p>\n                                    </div>\n\n\n\n                                </div>\n\n\n                            </div>\n\n                        </div>\n                        <div className=\"loginModal-wrapper-container-right\">\n                            <div className=\"loginModal-wrapper-container-right-top\">\n                                <div onClick={formmodalfalse}> \n\n                                <Close className=\"loginModal-wrapper-container-right-top_iconClose\"  />\n                                </div>\n\n                                {\n                                    showForm ?\n                                        <div className=\"loginModal-wrapper-container-right-top-back\" onClick={() => { setShowForm(!showForm); setShowPasswordResetForm(false) }}>\n                                            <ArrowLeft className=\"loginModal-wrapper-container-right-top-back-iconArrow\" />\n                                            <p className=\"loginModal-wrapper-container-right-top-back_para\">Back</p>\n                                        </div>\n                                        :\n                                        ''\n                                }\n\n\n\n                            </div>\n\n                            {\n                                showForm ?\n                                    <div className=\"loginModal-wrapper-container-right-formContainer\">\n\n                                        {\n                                            showSignInWithEmailForm ?\n                                                <div className=\"loginModal-wrapper-container-right-formContainer-SignUpForm\">\n                                                    <Formik\n                                                        initialValues={{\n                                                            username: '',\n                                                            email: '',\n                                                            password: '',\n\n                                                        }}\n                                                        validationSchema={Yup.object({\n                                                            email: Yup.string().email('Invalid email address').required('Required'),\n                                                            password: Yup.string()\n                                                                .min(6, 'Must be 6 characters or more')\n                                                                .matches(\n                                                                    /^(?=.*[A-Z])/,\n                                                                    \"Must have One Uppercase Character\"\n                                                                )\n                                                                .matches(\n                                                                    /^(?=.*[0-9])/,\n                                                                    \" Must have One number\"\n                                                                )\n                                                                .matches(\n                                                                    /^(?=.*[!@#\\$%\\^&\\*])/,\n                                                                    \" Must have One special case Character\"\n                                                                )\n                                                                .required('Required'),\n                                                            username: Yup.string()\n                                                                .trim()\n                                                                .min(5, 'Must be 5 character or more')\n                                                                .required('Required'),\n                                                        })}\n                                                        onSubmit={(values, { setSubmitting, resetForm }) => {\n                                                            signUpSubmit({ values, setSubmitting, resetForm })\n                                                        }}\n                                                    >\n                                                        {(props) => (\n\n                                                            <form onSubmit={props.handleSubmit} className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form\">\n                                                                <h3 className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form-head\">Sign Up with Email</h3>\n                                                                <div className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form-name\" >\n                                                                    <label>Username</label>\n                                                                    <Field\n                                                                        type=\"text\"\n                                                                        name='username'\n                                                                        placeholder=\"username\"\n                                                                        onChange={props.handleChange}\n                                                                        value={props.values.username}\n                                                                    />\n                                                                    {\n                                                                        usernameError &&\n                                                                        <div className='error-msg-container'>\n                                                                            <ExclamanationTriangle className='icon' />\n                                                                            <p className='error-msg'>{usernameError}</p>\n                                                                        </div>\n                                                                    }\n                                                                </div>\n                                                                <ErrorMessage name=\"username\" render={renderError} />\n                                                                <div className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form-email\">\n                                                                    <label>Email</label>\n                                                                    <input\n                                                                        type=\"email\"\n                                                                        name='email'\n                                                                        placeholder=\"Email\"\n                                                                        onChange={props.handleChange}\n                                                                        value={props.values.email} />\n                                                                </div>\n                                                                <ErrorMessage name=\"email\" render={renderError} />\n                                                                <div className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form-password\">\n                                                                    <label>Password</label>\n                                                                    <input\n                                                                        type=\"password\"\n                                                                        name='password'\n                                                                        placeholder=\"Password\"\n                                                                        onChange={props.handleChange}\n                                                                        value={props.values.password} />\n                                                                </div>\n                                                                <ErrorMessage name=\"password\" render={renderError} />\n\n                                                                <div className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form-checkContainer\">\n                                                                    <input\n                                                                        type='checkbox'\n                                                                    />\n                                                                    <label>Send me updates from Medicos Pdf</label>\n                                                                </div>\n                                                                <button type=\"submit\" disabled={props.isSubmitting} className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form-btn\">Sign Up</button>\n                                                                <p className=\"loginModal-wrapper-container-right-formContainer-SignUpForm-form-para\">\n                                                                    This site is protected by reCAPTCHA and the Google\n                                                                    <span onClick={() => newTab('https://policies.google.com/privacy?hl=en-US', 'google privacy', 'google_privacy_clicked')}> Privacy Policy </span>\n                                                                    and\n                                                                    <span onClick={() => newTab('https://policies.google.com/terms?hl=en-US', 'google terms', 'google_terms_clicked')}> Terms of Service </span>\n                                                                    apply.\n                                                                </p>\n                                                            </form>\n                                                        )}\n                                                    </Formik>\n                                                </div>\n\n                                                :\n\n\n                                                <div className=\"loginModal-wrapper-container-right-formContainer-SignInForm\">\n                                                    {\n                                                        showPasswordResetForm ?\n\n                                                            <div className=\"loginModal-wrapper-container-right-formContainer-resetPassword\">\n                                                                <Formik\n                                                                    initialValues={{\n                                                                        email: '',\n\n\n                                                                    }}\n                                                                    validationSchema={Yup.object({\n                                                                        email: Yup.string().email('Invalid email address').required('Required'),\n\n                                                                    })}\n\n                                                                    onSubmit={(values, { setSubmitting, resetForm }) => {\n                                                                        forgetPasswordSubmit({ values, setSubmitting, resetForm })\n                                                                    }}\n\n                                                                >\n                                                                    {(props) => (\n                                                                        <form onSubmit={props.handleSubmit} className=\"loginModal-wrapper-container-right-formContainer-resetPassword-form\" >\n                                                                            <h3 className=\"loginModal-wrapper-container-right-formContainer-resetPassword-form-head\">Reset Password</h3>\n                                                                            <div className=\"loginModal-wrapper-container-right-formContainer-resetPassword-form-email\" >\n                                                                                <label>Email</label>\n                                                                                <Field\n                                                                                    type=\"email\"\n                                                                                    name='email'\n                                                                                    placeholder=\"Email\"\n                                                                                    onChange={props.handleChange}\n                                                                                    value={props.values.email} />\n\n                                                                            </div>\n                                                                            <ErrorMessage name=\"email\" render={renderError} />\n\n                                                                            <button type=\"submit\" disabled={props.isSubmitting} className=\"loginModal-wrapper-container-right-formContainer-resetPassword-form-btn\" >Sign In</button>\n\n                                                                            <p className=\"loginModal-wrapper-container-right-formContainer-resetPassword-form-para\" >\n                                                                                This site is protected by reCAPTCHA and the Google\n                                                                                <span onClick={clickhandlertab5}> Privacy Policy </span>\n                                                                                and\n                                                                                <span onClick={clickhandlertab6}> Terms of Service </span>\n                                                                                apply.\n                                                                            </p>\n                                                                        </form>\n                                                                    )}\n                                                                </Formik>\n                                                            </div>\n                                                            :\n                                                            <Formik\n                                                                initialValues={{\n                                                                    email: '',\n                                                                    password: '',\n\n                                                                }}\n                                                                validationSchema={Yup.object({\n                                                                    email: Yup.string().email('Invalid email address').required('Required'),\n                                                                    password: Yup.string()\n                                                                        .required('Required'),\n                                                                })}\n\n                                                                onSubmit={(values, { setSubmitting, resetForm }) => {\n                                                                    loginSubmit({ values, setSubmitting, resetForm })\n                                                                }}\n\n                                                            >\n                                                                {(props) => (\n                                                                    <form onSubmit={props.handleSubmit} className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form\" >\n                                                                        <h3 className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form-head\">Sign In with Email</h3>\n                                                                        <div className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form-email\" >\n                                                                            <label>Email</label>\n                                                                            <Field\n                                                                                type=\"email\"\n                                                                                name='email'\n                                                                                placeholder=\"Email\"\n                                                                                onChange={props.handleChange}\n                                                                                value={props.values.email} />\n\n                                                                        </div>\n                                                                        <ErrorMessage name=\"email\" render={renderError} />\n\n                                                                        <div className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form-password\" >\n                                                                            <label>Password</label>\n                                                                            <Field\n                                                                                type=\"password\"\n                                                                                name='password'\n                                                                                placeholder=\"Password\"\n                                                                                onChange={props.handleChange}\n                                                                                value={props.values.password} />\n                                                                        </div>\n                                                                        <ErrorMessage name=\"password\" render={renderError} />\n\n                                                                        <div className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form-checkContainer\">\n                                                                            <input\n                                                                                type='checkbox'\n                                                                            />\n                                                                            <label>Send me updates from Medicos Pdf</label>\n                                                                        </div>\n\n                                                                        <button type=\"submit\" disabled={props.isSubmitting} className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form-btn\" >Sign In</button>\n                                                                        <p className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form-resetPageLink\" onClick={() => setShowPasswordResetForm(true)}>Forgot your password?</p>\n                                                                        <p className=\"loginModal-wrapper-container-right-formContainer-SignInForm-form-para\" >\n                                                                            This site is protected by reCAPTCHA and the Google\n                                                                            <span onClick={() => newTab('https://policies.google.com/privacy?hl=en-US', 'google privacy', 'google_privacy_clicked')}> Privacy Policy </span>\n                                                                            and\n                                                                            <span onClick={() => newTab('https://policies.google.com/terms?hl=en-US', 'google terms', 'google_terms_clicked')}> Terms of Service </span>\n                                                                            apply.\n                                                                        </p>\n                                                                    </form>\n                                                                )}\n                                                            </Formik>\n                                                    }\n\n\n\n\n                                                </div>\n\n\n\n                                        }\n\n\n\n\n                                    </div>\n\n                                    :\n                                    <div className=\"loginModal-wrapper-container-right-main\">\n                                        {\n                                            showSignIn ?\n                                                ''\n                                                :\n                                                <div className=\"loginModal-wrapper-container-right-main-logo\">\n                                                    {/* <img src={require('../../../assets/images/medicospdf_logo.webp').default} alt='logo' /> */}\n                                                    <LazyLoadImage src={require('../../../assets/images/medicospdf_logo.webp').default} alt={'logo'} effect='blur'/>\n                                                </div>\n                                        }\n\n                                        <div className=\"loginModal-wrapper-container-right-main-heading\">\n                                            {\n                                                showSignIn ?\n                                                    <h3 className=\"loginModal-wrapper-container-right-main-heading-head2\">Best Place For Medical Study Materials</h3>\n                                                    :\n                                                    <h3 className=\"loginModal-wrapper-container-right-main-heading-head1\">Sign In to MedicosPdf</h3>\n                                            }\n\n\n                                        </div>\n                                        <div className=\"loginModal-wrapper-container-right-main-loginMethod\">\n\n                                            <div className=\"loginModal-wrapper-container-right-main-loginMethod-facebook\" onClick={clickhandlerfbprovider}>\n                                                <FacebookIcon className='socialIcon' />\n                                                <h5>Continue With Facebook</h5>\n\n                                            </div>\n\n                                            <div className=\"loginModal-wrapper-container-right-main-loginMethod-google\" onClick={clickhandlergoogleprovider}>\n                                                <GoogleIcon className='socialIcon' />\n                                                <h5>Continue With Google</h5>\n\n                                            </div>\n\n                                            <div className=\"loginModal-wrapper-container-right-main-loginMethod-email\">\n\n                                                <p>or</p>\n                                                {\n                                                    showSignIn ?\n                                                        <p className=\"email-link\" onClick={clickhandlersignin}>\n                                                            Sign Up With Email\n                                                        </p>\n                                                        :\n                                                        <p className=\"email-link\" onClick={clickhandlersignshow}>\n                                                            Sign In With Email\n                                                        </p>\n                                                }\n\n\n                                            </div>\n\n\n\n                                        </div>\n                                        {\n                                            showSignIn ?\n                                                <div className=\"loginModal-wrapper-container-right-main-checkContainer\">\n                                                    <div className=\"loginModal-wrapper-container-right-main-checkContainer-check\">\n                                                        <input type='checkbox' />\n                                                        <label>Send me updates from Medicos PDF</label>\n                                                    </div>\n                                                    <p className=\"loginModal-wrapper-container-right-main-checkContainer-para\">By signing up with MedicosPDF, you agree to our <a href='/termsandconditions'>Terms of Service</a> and <a href='/privacypolicy'>Privacy Policy</a></p>\n                                                </div>\n                                                :\n                                                ''\n                                        }\n\n\n                                    </div>\n                            }\n\n\n\n\n\n                            <div className=\"loginModal-wrapper-container-right-bottom\">\n                                {\n                                    showSignIn ?\n                                        <div className=\"loginModal-wrapper-container-right-bottom-signIn\">\n                                            <h5> Already have an account?</h5>\n                                            <p className=\"signIn-link\" onClick={() => { setShowSignIn(!showSignIn); setShowForm(false) }}>Sign In</p>\n                                        </div>\n                                        :\n                                        <div className=\"loginModal-wrapper-container-right-bottom-signup\">\n                                            <h5> New to Medicos Pdf?</h5>\n                                            <p className=\"signup-link\" onClick={() => { setShowSignIn(!showSignIn); setShowForm(false); setShowPasswordResetForm(false) }}>Sign Up</p>\n                                        </div>\n                                }\n\n\n\n\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n            }\n        </>\n    )\n}\n","// import { getAuth, signInWithPopup } from \"firebase/auth\";\n\n\nconst SocialMediaAuth=async (provider)=>{\n    // const auth = getAuth();\n    const getFirebaseAll=()=>{\n        return Promise.all([\n            import('../../../firebase/auth')\n        ])\n        .then(([auth])=>{\n            return{auth}\n        })\n    }\n    try {\n        const {auth:{auth,signInWithPopup}}=await getFirebaseAll()\n        const res = await \n            signInWithPopup(auth,provider);\n        return res.user;\n    } catch (err) {\n        return err;\n    }\n}\n\nexport default SocialMediaAuth"],"names":["props","_jsx","xmlns","viewBox","className","fill","children","d","LoginModal","_ref","show","formModel","history","useHistory","_useContext","useContext","AuthContext","forgetPassword","register","login","user","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","setShowModal","_useLocalStorage","useLocalStorage","_useLocalStorage2","preference","_useLocalStorage3","_useLocalStorage4","usernameLocalStorage","setUsernameLocalStorage","_useState5","_useState6","_useState7","_useState8","showSignIn","setShowSignIn","_useState9","_useState10","showForm","setShowForm","_useState11","_useState12","showSignInWithEmailForm","setShowSignInWithEmailForm","_useState13","_useState14","showPasswordResetForm","setShowPasswordResetForm","_useState15","_useState16","usernameError","setUsernameError","getFirebaseAll","Promise","all","then","_ref2","firestore","handleOnCLick","_ref4","_asyncToGenerator","_regeneratorRuntime","_callee","provider","_yield$getFirebaseAll","_yield$getFirebaseAll2","doc","onSnapshot","db","_context","prev","next","sent","SocialMediaAuth","res","console","log","uid","docRef","querySnapshot","_querySnapshot$data","exists","data","username","push","t0","stop","_x","apply","arguments","renderError","message","loginSubmit","_ref6","_callee2","_ref5","values","setSubmitting","resetForm","_context2","email","password","_x2","signUpSubmit","_ref8","_callee3","_ref7","_yield$getFirebaseAll3","_yield$getFirebaseAll4","_context3","alert","_x3","useEffect","isMounted","clickhandlertab5","newTab","clickhandlertab6","_Fragment","concat","_jsxs","LazyLoadImage","src","require","alt","effect","style","display","onClick","Close","ArrowLeft","Formik","initialValues","validationSchema","Yup","required","min","matches","trim","onSubmit","_ref10","handleSubmit","Field","type","name","placeholder","onChange","handleChange","value","ExclamanationTriangle","ErrorMessage","render","disabled","isSubmitting","_ref11","_ref9","forgetPasswordSubmit","_ref12","facebookProvider","FacebookIcon","googleProvider","GoogleIcon","href","auth","signInWithPopup","abrupt"],"sourceRoot":""}